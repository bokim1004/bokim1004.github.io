{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/js-object-add/","result":{"data":{"site":{"siteMetadata":{"title":"chloe's tech blog","author":"chloe kim","siteUrl":"https://bokim1004.github.io","comment":{"disqusShortName":"https-bokim1004-github-io","utterances":"bokim1004/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8c506fba-2161-57f7-90a1-2bfa2afb213c","excerpt":"이번주에 기억남는 에러 중 하나가 있었는데요. \n신발 사이즈를 입력하고 이전페이지에 갔다가 다시 오면 신발 사이즈 입력한게 사리지는 이슈였습니다 ㅠㅠ\n이전페이지에서 선택한 신발정보 상태에 추가로 “size” 프로퍼티를 추가하는 방법으로 이 문제를 해결할 수 있었습니다.\n다른 방법이 있었을지 모르겠지만, 다른 개발자와 얘기를 해본 결과 이 방법이 최선인 것 같았습니다. 각각 선택한 신발의 사이즈를 입력해줍니다. 이 때, 기존에 존재하는 선택한 신발의 값을 가지고 있는 객체에 size…","html":"<p>이번주에 기억남는 에러 중 하나가 있었는데요. <br/>\n신발 사이즈를 입력하고 이전페이지에 갔다가 다시 오면 신발 사이즈 입력한게 사리지는 이슈였습니다 ㅠㅠ<br/>\n이전페이지에서 선택한 신발정보 상태에 추가로 “size” 프로퍼티를 추가하는 방법으로 이 문제를 해결할 수 있었습니다.\n다른 방법이 있었을지 모르겠지만, 다른 개발자와 얘기를 해본 결과 이 방법이 최선인 것 같았습니다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/49242c83-35f6-47ac-ad69-548d45799ff5/image.png\" width=\"250px\" height=\"400px\">\n</p>\n<p>각각 선택한 신발의 사이즈를 입력해줍니다. 이 때, 기존에 존재하는 선택한 신발의 값을 가지고 있는 객체에 size프로퍼티를 추가해줍니다. <br/>\n사이즈를 입력하면 그럼 아래와 같이 size 프로퍼티에 값이 추가되는 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">brand</span><span class=\"token operator\">:</span> <span class=\"token string\">'A.P.C'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">modelName</span><span class=\"token operator\">:</span> <span class=\"token string\">'화이트 스니커즈'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">shoeId</span><span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>선택한 신발의 리스트는 selectedShoe라는 선택한 신발 값 객체를 담고있는 배열을 map으로 돌려준 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>selectedShoe<span class=\"token punctuation\">,</span> setSelectedShoe<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useRecoilState</span><span class=\"token punctuation\">(</span>selectShoesSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">{</span>selectedShoe<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">shoe</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">idx</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>selectedShoe의 상태에 size가 추가되었으니, 그럼 이전 페이지에 갔다가 다시 와도 사이즈 값이 사라지지 않게 됩니다.</p>\n<p>코드를 간단하게 살펴보면 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>selectedShoe<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">shoe</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">idx</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>shoe<span class=\"token punctuation\">.</span>brand<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>shoe<span class=\"token punctuation\">.</span>modelName<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>Select\n  defaultValue<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>shoe<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">}</span>\n  onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">changeShoeSize</span><span class=\"token punctuation\">(</span>shoe<span class=\"token punctuation\">,</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>여러개 사이즈 중에 한 개를 선택할 때 함수 <code class=\"language-text\">changeShoeSize</code>를 호출합니다.\n이 함수 안에서 size 프로퍼티를 추가해주는 로직을 짜야했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeShoeSize</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">shoe</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//selectedShoe에 map을 돌려 새로운 배열을 만든다. 이 때,size를 추가해준다.</span>\n  <span class=\"token keyword\">let</span> shoeWithSize <span class=\"token operator\">=</span> selectedShoe<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>_id <span class=\"token operator\">===</span> shoe<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>value<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> size<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> value\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">setSelectedShoe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>shoeWithSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>새로운 배열을 만들어주는 map을 이용해 size 프로퍼티를 추가하여 줍니다. <code class=\"language-text\">setSelectedShoe</code>될 때 <code class=\"language-text\">shoeWithSize</code> 배열 값을 복사해줍니다.\n그리고 조건을 걸어줘서 현재 사이즈 값을 변경하는 곳에만 size 프로퍼티를 추가해줘야 합니다.\n그럼 끝!! <br/></p>\n<p>추가적으로 <code class=\"language-text\">객체에 프로퍼티를 추가하는 방법</code>에는 무엇이 있을까 알아보았습니다.\n<br/></p>\n<h3 id=\"1-dot-notation--사용하기\" style=\"position:relative;\"><a href=\"#1-dot-notation--%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 dot notation  사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Dot Notation (.) 사용하기</h3>\n<p>가장 쉬운 방법은 Dot natation을 사용하는 방법입니다.\n아래 예제를 살펴봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'chloe'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">major</span><span class=\"token operator\">:</span> <span class=\"token string\">'Computer Science'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//위 객체에 새로운 프로퍼티를 추가해줍니다.</span>\nobj<span class=\"token punctuation\">.</span>secondName <span class=\"token operator\">=</span> <span class=\"token string\">'Jain'</span>\nobj<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'Female'</span></code></pre></div>\n<p>콘솔로그를 다시 찍어보면 아래와 같이 나오게 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'chloe'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">major</span><span class=\"token operator\">:</span> <span class=\"token string\">'Computer Science'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">secondName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Jain'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 주의할 점은 프로퍼티 네임에 숫자나 특수문자를 입력하면 안된다는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">obj<span class=\"token punctuation\">.</span>123name <span class=\"token operator\">=</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이쓰면 <code class=\"language-text\">Syntax Error</code>가 납니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">SyntaxError</span><span class=\"token operator\">:</span> Invalid or unexpected token</code></pre></div>\n<br/>\n<h3 id=\"2-square-brackets-notation--사용하기\" style=\"position:relative;\"><a href=\"#2-square-brackets-notation--%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 square brackets notation  사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Square Brackets Notation [] 사용하기</h3>\n<p>위의 예시처럼 dot notation 사용이 어려운 경우가 있습니다.\n이 때 <code class=\"language-text\">Brackets Notation []</code>을 사용해 객체에 새로운 프로퍼티를 추가할 수 있습니다.\n아래 예시를 살펴봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'India'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token string\">'Delhi'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">'state'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Mumbai'</span> <span class=\"token comment\">//이미 존재하는 state 프로퍼티를 변경</span>\nobj<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">//obj 아래 객체 추가</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">'city'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Navi Mumbai'</span> <span class=\"token comment\">//city프로퍼티에 name 프로퍼티 추가</span>\nobj<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">[</span><span class=\"token string\">'street'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token comment\">// dot and square bracket notation 혼합</span></code></pre></div>\n<p>콘솔로그를 찍어보면 아래와 같이 나올 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'India'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mumbai'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Navi Mumbai'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">street</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h3 id=\"3-objectdefineproperty-사용하기\" style=\"position:relative;\"><a href=\"#3-objectdefineproperty-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"3 objectdefineproperty 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Object.defineProperty() 사용하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> new_property<span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 메소드를 사용하면 객체를 변경할 수 있게 해줍니다.\n예시를 살펴보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// false로 하면 id 프로퍼티는 수정할 수 없습니다.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token number\">412</span> <span class=\"token comment\">//'id' property에 영향을 주지 않습니다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Object ID:'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 101로 나옵니다.</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">'Chloe'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">writable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// true면 name property는 변경가능합니다.</span>\nobj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Mayank Jain'</span> <span class=\"token comment\">//name property를 변경할 수 있습니다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Object Name:'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">//prints 'Mayank Jain'</span></code></pre></div>\n<br/>\n<h3 id=\"4-objectassign-사용하기\" style=\"position:relative;\"><a href=\"#4-objectassign-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"4 objectassign 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Object.assign() 사용하기</h3>\n<p>이 메소드를 사용해도 객체에 프로퍼티를 추가할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> student <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Chloe'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nationality</span><span class=\"token operator\">:</span> <span class=\"token string\">'Korean'</span> <span class=\"token punctuation\">}</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span> <span class=\"token comment\">//info Object를 student객체에 추가할 수 있다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span> <span class=\"token comment\">// stundent객체에 info객체가 추가된다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span> <span class=\"token comment\">//info객체만 나온다</span></code></pre></div>\n<p>콘솔을 찍은 결과는 짜잔..!!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//student</span>\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Chloe'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nationality</span><span class=\"token operator\">:</span> <span class=\"token string\">'Korean'</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//info</span>\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nationality</span><span class=\"token operator\">:</span> <span class=\"token string\">'Korean'</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h3 id=\"5-spread-operater-사용하기\" style=\"position:relative;\"><a href=\"#5-spread-operater-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"5 spread operater 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Spread Operater(…) 사용하기</h3>\n<p><code class=\"language-text\">Spread operator (...)</code>는 기존에 존재하는 객체를 복사합니다.\n예시를 살펴봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mayank'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'035'</span> <span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\nobj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">nationality</span><span class=\"token operator\">:</span> <span class=\"token string\">'Indian'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">//기존 객체를 복사하고 프로퍼티를 추가한다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token comment\">//새로운 프로퍼티를 추가한 객체가 프린트 된다.</span>\n\n<span class=\"token keyword\">let</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">country</span><span class=\"token operator\">:</span> <span class=\"token string\">'India'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> <span class=\"token string\">'Delhi'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">pincode</span><span class=\"token operator\">:</span> <span class=\"token string\">'110053'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Raj'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Kumar'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token string\">'21'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span> <span class=\"token punctuation\">}</span>\n\nobj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj3<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>obj2 <span class=\"token punctuation\">}</span> <span class=\"token comment\">//obj3객체에 obj2객체 프로퍼티를 추가한다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span></code></pre></div>\n<p>콘솔 찍힌 것을 차례로 보면 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mayank'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'035'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Mayank'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'035'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">nationality</span><span class=\"token operator\">:</span> <span class=\"token string\">'Indian'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Raj'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Kumar'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token string\">'21'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">gender</span><span class=\"token operator\">:</span> <span class=\"token string\">'Male'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">country</span><span class=\"token operator\">:</span> <span class=\"token string\">'India'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">city</span><span class=\"token operator\">:</span> <span class=\"token string\">'Delhi'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">pincode</span><span class=\"token operator\">:</span> <span class=\"token string\">'110053'</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>객체에 프로퍼티를 추가하는 방법에 대해 정리해보았습니다.<br/>\n평소에 익숙하지 않았던 Brackets Notation[]을 사용하거나, Object.defineProperty()를 사용하는 방법으로도 객체에 프로퍼티를 추가할 수 있구나를 이번 기회에 알게되었네요.<br/>\n이 글이 도움이 되길 바라며 이번 글을 마칩니다 :)</p>\n<blockquote>\n<p>참고 :<a href=\"https://www.scaler.com/topics/add-property-to-object-javascript/\">https://www.scaler.com/topics/add-property-to-object-javascript/</a></p>\n</blockquote>","frontmatter":{"title":"자바스크립트 객체에 프로퍼티를 추가하는 방법","date":"March 11, 2023","image":"https://velog.velcdn.com/images/chloeee/post/ead6b29b-6ea7-40d9-8c71-6047800518c2/image.png"}}},"pageContext":{"slug":"/javascript/js-object-add/","previous":{"fields":{"slug":"/etc/about-webpack/"},"frontmatter":{"title":"웹팩(Webpack) 이해하기"}},"next":{"fields":{"slug":"/react/sentry/"},"frontmatter":{"title":"SENTRY로 프론트 에러 잡아내기"}}}},"staticQueryHashes":["2486386679","3128451518"]}