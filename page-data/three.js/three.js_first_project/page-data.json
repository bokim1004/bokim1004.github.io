{"componentChunkName":"component---src-templates-blog-post-js","path":"/three.js/three.js_first_project/","result":{"data":{"site":{"siteMetadata":{"title":"프론트엔드 로그 by 굥 🐳","author":"굥","siteUrl":"https://bokim1004.github.io","comment":{"disqusShortName":"https-bokim1004-github-io","utterances":"bokim1004/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9669e6ef-5bec-54e6-a68c-11a10fd9c464","excerpt":"Three.js 프로젝트를 시작하며 Three.js study를 10월부터 시작하며  기본적인 개념들을 공부했다. \nThree.js의…","html":"<h3 id=\"threejs-프로젝트를-시작하며\" style=\"position:relative;\"><a href=\"#threejs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0\" aria-label=\"threejs 프로젝트를 시작하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Three.js 프로젝트를 시작하며</h3>\n<p>Three.js study를 10월부터 시작하며  기본적인 개념들을 공부했다. <br/>\nThree.js의 3가지 기본 요소인 <code class=\"language-text\">scene, camera, render</code>에서부터 <code class=\"language-text\">Geometry</code>, <code class=\"language-text\">Texture</code>, <code class=\"language-text\">Material</code>등등을 공부하며 여전히 모르는 건 많지만 어느정도 기본적인 것은 많이 파악되었다는 생각이 들었다. <br/></p>\n<p>이젠 개념에 대한 공부뿐만 아니라 실제로 개발을 해봐야겠다는 생각이 들어서, 나만의 프로젝트를 시작해보려고 한다. <br/>\n어떤 것을 만들 수 있을까 고민이 많이 되었는데, 처음부터 엄청 어렵고 복잡한 걸 시도해보기보단 작고 쉬운 걸 만들면서 공부하면서 내용을 덧붙이고 확장해나가면 좋겠다는 생각을 했다.</p>\n<h2 id=\"threejs로-실제로-존재하는-것들-예를-들어-달이나-자연을-웹페이지에서-표현할-수는-없을까\" style=\"position:relative;\"><a href=\"#threejs%EB%A1%9C-%EC%8B%A4%EC%A0%9C%EB%A1%9C-%EC%A1%B4%EC%9E%AC%ED%95%98%EB%8A%94-%EA%B2%83%EB%93%A4-%EC%98%88%EB%A5%BC-%EB%93%A4%EC%96%B4-%EB%8B%AC%EC%9D%B4%EB%82%98-%EC%9E%90%EC%97%B0%EC%9D%84-%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90%EC%84%9C-%ED%91%9C%ED%98%84%ED%95%A0-%EC%88%98%EB%8A%94-%EC%97%86%EC%9D%84%EA%B9%8C\" aria-label=\"threejs로 실제로 존재하는 것들 예를 들어 달이나 자연을 웹페이지에서 표현할 수는 없을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Three.js로 실제로 존재하는 것들, 예를 들어 달이나 자연을 웹페이지에서 표현할 수는 없을까?</h2>\n<p>퇴근 후 문득 하늘을 보는데 밤 하늘에 달이 너무나도 밝고 아름다웠다. 동그란 달이 밝은 빛을 내는데, 저렇게 실제하는 자연의 일부를 three.js로 구현해볼 수 있지 않을까라는 생각이 들었다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/d039113e-d587-4ca1-96c2-bc09a6f71e4d/image.png\n\" width=\"400px\" height=\"470px\">\n</p>\n<h2 id=\"밤-하늘의-빛나는-달을-threejs로-구현해보기-\" style=\"position:relative;\"><a href=\"#%EB%B0%A4-%ED%95%98%EB%8A%98%EC%9D%98-%EB%B9%9B%EB%82%98%EB%8A%94-%EB%8B%AC%EC%9D%84-threejs%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%B4%EB%B3%B4%EA%B8%B0-\" aria-label=\"밤 하늘의 빛나는 달을 threejs로 구현해보기  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>밤 하늘의 빛나는 달을 Three.js로 구현해보기 🌕</h2>\n<p>우선 처음은 카메라를 띄우고, THREE.SphereGeometry를 이용해 동그란 구체를 생성해서 달 표면 texture를 보이게 한 후,\n조명을 추가하여 달 주변 빛을 나게 하는 방식으로 해보는 것을 목표로 했다.</p>\n<h3 id=\"1-scenecamerarenderer-3가지-기본-요소를-구현한다\" style=\"position:relative;\"><a href=\"#1-scenecamerarenderer-3%EA%B0%80%EC%A7%80-%EA%B8%B0%EB%B3%B8-%EC%9A%94%EC%86%8C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4\" aria-label=\"1 scenecamerarenderer 3가지 기본 요소를 구현한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. scene,camera,renderer 3가지 기본 요소를 구현한다.</h3>\n<p>가장 먼저 <code class=\"language-text\">Scene</code>을 만든다. <br/> Scene안에 3D 객체인 달, 달을 비추는 조명, 달을 보이게 하는 카메라가 배치된다.\n말 그대로 3D환경의 기본 무대라고 볼 수 있다. 그리고 Scene을 렌더링하기 위해서는 <code class=\"language-text\">canvas</code>요소가 필요하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">THREE</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'three'</span>\n<span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas.webgl'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// scene을 렌더링하기 위해서 필요</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Scene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>그 다음은 <code class=\"language-text\">camera</code>를 설정한다.<br/>\n화면에 3D 객체인 달을 렌더링하려면, 적어도 하나의 카메라가 필요하다.\n원근감을 표현하는 <code class=\"language-text\">PerspectiveCamera</code>를 사용해 멀리 있는 물체는 작게 보이고 가까이 있는 물체는 크게 보이도록 렌더링하게 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>PerspectiveCamera</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> sizes<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\ncamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ncamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\ncamera<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">)</span></code></pre></div>\n<p>다음은 <code class=\"language-text\">renderer</code>를 생성한다.<br/>\nrenerer는 camera와 scene에 대한 정보를 기반으로 3D객체인 달을 2D화면에 렌더링하여 사용자에게 보여주게 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>WebGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">canvas</span><span class=\"token operator\">:</span> canvas<span class=\"token punctuation\">,</span> <span class=\"token comment\">// webGLRenderer에 전달하며, webGL api는 canvas요소에서만 동작한다.</span>\n  <span class=\"token literal-property property\">antialias</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 계단 현상 방지</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> sizes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> window<span class=\"token punctuation\">.</span>innerHeight\n<span class=\"token punctuation\">}</span>\n\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>sizes<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> sizes<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setPixelRatio</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">setSize</code> 메서드로 렌더러의 크기를 설정하고 <code class=\"language-text\">setPixelRatio</code>메서드로 렌더러의 픽셀 비율을 설정한다.\n<code class=\"language-text\">Math.min(window.devicePixelRatio, 2)</code>로 픽셀 비율 최대 값을 2로 제한한다. 그 이유는 너무 높은 devicePixelRatio 값이 렌더링 성능에 부담을 줄 수 있기 때문이다.</p>\n<h3 id=\"2--geometry와-material을-조합하여-3d객체인-mesh를-만든다\" style=\"position:relative;\"><a href=\"#2--geometry%EC%99%80-material%EC%9D%84-%EC%A1%B0%ED%95%A9%ED%95%98%EC%97%AC-3d%EA%B0%9D%EC%B2%B4%EC%9D%B8-mesh%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"2  geometry와 material을 조합하여 3d객체인 mesh를 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.  geometry와 material을 조합하여 3D객체인 mesh를 만든다.</h3>\n<p>달을 만들기 위해 <code class=\"language-text\">THREE.SphereGeometry</code>로 구체 형태의 3D 객체를 생성한다.\n달의 material은 현실감 있는 조명과 반사 효과를 구현하기 위해 <code class=\"language-text\">MeshStandardMaterial</code>을 사용했다. <br/>\nmeshStandardMaterial은 <code class=\"language-text\">물리 기반 렌더링(PBR, Physically-Based Rendering)</code>을 지원하는 고급 material이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> moonMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>MeshStandardMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">roughness</span><span class=\"token operator\">:</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 표면의 거칠기 조절 (1에 가까울수록 거친 표면)</span>\n  <span class=\"token literal-property property\">metalness</span><span class=\"token operator\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 금속성 정도 </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> sphere <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Mesh</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>SphereGeometry</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  moonMaterial\n<span class=\"token punctuation\">)</span>\nsphere<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \nsphere<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"3-3d객체에-달-표면-texture를-보이게-한다\" style=\"position:relative;\"><a href=\"#3-3d%EA%B0%9D%EC%B2%B4%EC%97%90-%EB%8B%AC-%ED%91%9C%EB%A9%B4-texture%EB%A5%BC-%EB%B3%B4%EC%9D%B4%EA%B2%8C-%ED%95%9C%EB%8B%A4\" aria-label=\"3 3d객체에 달 표면 texture를 보이게 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 3D객체에 달 표면 Texture를 보이게 한다.</h3>\n<p>달 표면을 보여줄 이미지를 하나 다운로드해서 texture로 사용할 수 있게 했다.\n<code class=\"language-text\">Three.TextureLoader</code>로 텍스처 이미지를 로드할 수 있게 하고, MeshStandardMaterial에 적용해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> textureLoader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>TextureLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> moonTexture <span class=\"token operator\">=</span> textureLoader<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./textures/moon_texture.jpeg'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> moonMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>MeshStandardMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">map</span><span class=\"token operator\">:</span> moonTexture<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 텍스처를 재질에 적용</span>\n  <span class=\"token literal-property property\">roughness</span><span class=\"token operator\">:</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 표면의 거칠기 조절 (1에 가까울수록 거친 표면)</span>\n  <span class=\"token literal-property property\">metalness</span><span class=\"token operator\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 금속성 정도 </span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"4-environment-map으로-달이-뜨는-밤-하늘-모습-보여주기\" style=\"position:relative;\"><a href=\"#4-environment-map%EC%9C%BC%EB%A1%9C-%EB%8B%AC%EC%9D%B4-%EB%9C%A8%EB%8A%94-%EB%B0%A4-%ED%95%98%EB%8A%98-%EB%AA%A8%EC%8A%B5-%EB%B3%B4%EC%97%AC%EC%A3%BC%EA%B8%B0\" aria-label=\"4 environment map으로 달이 뜨는 밤 하늘 모습 보여주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Environment map으로 달이 뜨는 밤 하늘 모습 보여주기</h3>\n<p>environment map은 HDR(High Dynamic Range)환경 맵을 로드하고 Scene의 배경이나 물체의 반사 조명을 설정할 수 있다.\n여기서 HDR환경 맵은 한마디로 HDR이미지를 활용해서 3D장면에서 주변 환경을 표현하는 텍스처를 의미한다.</p>\n<p>난 three.js journey에서 알려준 <a href=\"https://polyhaven.com/\">Poly heaven</a>이라는 곳에서 3D 달을 뛰어줄 밤하늘 HDR이미지를 하나 찾았다.\n파일 형식이 .exr이었기에 Three.js 확장 라이브러리인 <code class=\"language-text\">EXRLoader</code>로 파일을 로드했다.</p>\n<p>환경 맵은 여러가지 형식으로 표현될 수 있다.\n<code class=\"language-text\">environmentMap.mapping = THREE.EquirectangularReflectionMapping</code> <br/>\n이 부분은 로드된 텍스처이미지의 mapping 속성을 설정하는 부분인데, 여기서 사용된 EquirectangularReflectionMapping은 직사각형으로 펼쳐진 환경 맵으로\n일반적인 HDR이미지가 이 형식이라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> exrLoader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EXRLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nexrLoader<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./textures/environmentMap/sky.exr'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">environmentMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n  environmentMap<span class=\"token punctuation\">.</span>mapping <span class=\"token operator\">=</span> <span class=\"token constant\">THREE</span><span class=\"token punctuation\">.</span>EquirectangularReflectionMapping\n\n  scene<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> environmentMap <span class=\"token comment\">//  scene 전체가 HDR이미지로 감싸진 것처럼 보이게 된다.</span>\n  scene<span class=\"token punctuation\">.</span>environment <span class=\"token operator\">=</span> environmentMap <span class=\"token comment\">// scene의 환경맵으로 할당하여 HDR텍스처가 반사와 조명효과에 영향을 주게 된다.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h3 id=\"5-orbitcontrol을-이용하여-카메라가-회전줌이동되게-하기\" style=\"position:relative;\"><a href=\"#5-orbitcontrol%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%B9%B4%EB%A9%94%EB%9D%BC%EA%B0%80-%ED%9A%8C%EC%A0%84%EC%A4%8C%EC%9D%B4%EB%8F%99%EB%90%98%EA%B2%8C-%ED%95%98%EA%B8%B0\" aria-label=\"5 orbitcontrol을 이용하여 카메라가 회전줌이동되게 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. orbitControl을 이용하여 카메라가 회전,줌,이동되게 하기</h3>\n<p>카메라와 상호작용할 수 있는 컨트롤러를 이용해 카메라를 사용자 입력에 따라 움직이게 만들어주게 했다.\n가장 기본적으로 많이 사용되는 <code class=\"language-text\">OrbitControls</code>를 사용해서 카메라를 중심으로 회전하거나 줌 인/아웃 할 수 있게 만들어주었다.\n추가로 enableDamping을 활성화하면 움직임이 부드러워져 사용자가 조작할 때 더 자연스러운 효과를 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> controls <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrbitControls</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">)</span>\ncontrols<span class=\"token punctuation\">.</span>enableDamping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 부드러운 움직임을 추가</span></code></pre></div>\n<h3 id=\"6-화면에서-달이-회전하게-animation-효과-주기\" style=\"position:relative;\"><a href=\"#6-%ED%99%94%EB%A9%B4%EC%97%90%EC%84%9C-%EB%8B%AC%EC%9D%B4-%ED%9A%8C%EC%A0%84%ED%95%98%EA%B2%8C-animation-%ED%9A%A8%EA%B3%BC-%EC%A3%BC%EA%B8%B0\" aria-label=\"6 화면에서 달이 회전하게 animation 효과 주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 화면에서 달이 회전하게 animation 효과 주기</h3>\n<p>애니메이션 루프함수를 만들어서 매 프레임마다 달의 위치와 장면을 그리고 다시 렌더링하게 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> clock <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 시간을 추적한다.</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">tick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> elapsedTime <span class=\"token operator\">=</span> clock<span class=\"token punctuation\">.</span><span class=\"token function\">getElapsedTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 애니메이션의 현재 경과 시간을 계산한다.</span>\n\n  <span class=\"token comment\">// 시간이 지날수록 sphere 객체가 지속적으로 회전한다.</span>\n  sphere<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">*</span> elapsedTime\n  sphere<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.15</span> <span class=\"token operator\">*</span> elapsedTime\n\n  <span class=\"token comment\">// 카메라 control을 사용하는 경우, control 상태를 업데이트하는데 사용된다.</span>\n  <span class=\"token comment\">// 이는 카메라 위치와 방향을 최신상태로 유지하게한다.</span>\n  controls<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// scene을 지속적으로 업데이트해서 애니메이션을 가능하게 한다.</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> camera<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 브라우저 프레임 타이밍에 맞춰 tick함수를 호출한다.</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>tick<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </code></pre></div>\n<h3 id=\"7-달-주변이-빛나게-조명-추가하기\" style=\"position:relative;\"><a href=\"#7-%EB%8B%AC-%EC%A3%BC%EB%B3%80%EC%9D%B4-%EB%B9%9B%EB%82%98%EA%B2%8C-%EC%A1%B0%EB%AA%85-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"7 달 주변이 빛나게 조명 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 달 주변이 빛나게 조명 추가하기</h3>\n<p><code class=\"language-text\">ambientLight 주변광</code>을 설정해줘서 달 표면이 약하게 노란빛을 띄게 해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ambientLight <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>AmbientLight</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFAFAD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">)</span></code></pre></div>\n<p>실제 달 사진처럼 달을 감싸는 빛을 추가해보고 싶은데, 이건 어떻게 구현해야하는지 더 찾아봐야할 것 같다. <br/></p>\n<h2 id=\"현재까지-구현한-달의-모습-\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%9E%AC%EA%B9%8C%EC%A7%80-%EA%B5%AC%ED%98%84%ED%95%9C-%EB%8B%AC%EC%9D%98-%EB%AA%A8%EC%8A%B5-\" aria-label=\"현재까지 구현한 달의 모습  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현재까지 구현한 달의 모습 🌕</h2>\n<p>아래 이미지는 three.js로 구현한 달의 모습이다 🌝 <br/>\n앞으로 three.js를 더 공부해나가면서 추가로 공부한 내용들을 반영하여 더 완성도있는 project를 진행해보려고 한다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/a3d82a33-33ee-41b6-b0a6-5c28b903ec47/image.gif\" width=\"500px\">\n</p>","frontmatter":{"title":"Three.js Project - 달 구현해보기 🌕","date":"November 30, 2024","image":"https://velog.velcdn.com/images/chloeee/post/ff20711d-c6bd-4d27-b5e0-0a649610adf0/image.png"}}},"pageContext":{"slug":"/three.js/three.js_first_project/","previous":{"fields":{"slug":"/react/저무는-recoil,이젠-zustand와-jotai가-대세/"},"frontmatter":{"title":"저무는 recoil,이젠 zustand와 jotai가 대세"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}