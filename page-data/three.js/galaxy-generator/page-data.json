{"componentChunkName":"component---src-templates-blog-post-js","path":"/three.js/galaxy-generator/","result":{"data":{"site":{"siteMetadata":{"title":"프론트엔드 기록 by chloee 🐳","author":"chloee","siteUrl":"https://bokim1004.github.io","comment":{"disqusShortName":"https-bokim1004-github-io","utterances":"bokim1004/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9202fee3-68ac-5ca1-b869-ce864698f611","excerpt":"Three.js journey 강의를 들으며, galaxy를 만들 수 있는 부분이 있어서 참고해서 개발하며 정리한 것을\n기록해보려고 한다. Galaxy generator 1. 맨 처음 galaxy 함수를 하나 만들고, galaxy생성에 필요한 parameter 객체를 하나 만든다. 2. geometry와 particles(점) 만들기 parameters의 count는 은하 내 별의 개수로 보면 된다.  BufferGeometry는 Three.js에서 3D…","html":"<p>Three.js journey 강의를 들으며, galaxy를 만들 수 있는 부분이 있어서 참고해서 개발하며 정리한 것을\n기록해보려고 한다.</p>\n<h2 id=\"galaxy-generator\" style=\"position:relative;\"><a href=\"#galaxy-generator\" aria-label=\"galaxy generator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Galaxy generator</h2>\n<h3 id=\"1-맨-처음-galaxy-함수를-하나-만들고-galaxy생성에-필요한-parameter-객체를-하나-만든다\" style=\"position:relative;\"><a href=\"#1-%EB%A7%A8-%EC%B2%98%EC%9D%8C-galaxy-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%95%98%EB%82%98-%EB%A7%8C%EB%93%A4%EA%B3%A0-galaxy%EC%83%9D%EC%84%B1%EC%97%90-%ED%95%84%EC%9A%94%ED%95%9C-parameter-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%ED%95%98%EB%82%98-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"1 맨 처음 galaxy 함수를 하나 만들고 galaxy생성에 필요한 parameter 객체를 하나 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 맨 처음 galaxy 함수를 하나 만들고, galaxy생성에 필요한 parameter 객체를 하나 만든다.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateGalaxy</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">generateGalaxy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> parameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"2-geometry와-particles점-만들기\" style=\"position:relative;\"><a href=\"#2-geometry%EC%99%80-particles%EC%A0%90-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 geometry와 particles점 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. geometry와 particles(점) 만들기</h3>\n<ul>\n<li>parameters의 count는 은하 내 별의 개수로 보면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nparameters<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">1000</span>\n</code></pre></div>\n<h3 id=\"code-classlanguage-textbuffergeometry로-은하의-기하학적-데이터를-생성code\" style=\"position:relative;\"><a href=\"#code-classlanguage-textbuffergeometry%EB%A1%9C-%EC%9D%80%ED%95%98%EC%9D%98-%EA%B8%B0%ED%95%98%ED%95%99%EC%A0%81-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%83%9D%EC%84%B1code\" aria-label=\"code classlanguage textbuffergeometry로 은하의 기하학적 데이터를 생성code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">BufferGeometry로 은하의 기하학적 데이터를 생성</code></h3>\n<ul>\n<li>BufferGeometry는 Three.js에서 3D 모델의 정점 데이터를 효율적으로 관리하기 위해 사용되는 객체이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>BufferGeometry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"code-classlanguage-textpositions-배열을-생성code\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpositions-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%83%9D%EC%84%B1code\" aria-label=\"code classlanguage textpositions 배열을 생성code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">positions 배열을 생성</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">.</span>count <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Float32Array는 3D 공간의 좌표 데이터를 저장하는 배열이다.</li>\n<li>parameters.count * 3으로 배열 크기를 설정한다.</li>\n<li>각 점은 x, y, z 세 좌표를 가지므로 count * 3 크기가 필요하다.</li>\n</ul>\n<h3 id=\"code-classlanguage-text포인트-좌표-계산-및-할당code\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%ED%8F%AC%EC%9D%B8%ED%8A%B8-%EC%A2%8C%ED%91%9C-%EA%B3%84%EC%82%B0-%EB%B0%8F-%ED%95%A0%EB%8B%B9code\" aria-label=\"code classlanguage text포인트 좌표 계산 및 할당code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">포인트 좌표 계산 및 할당</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> parameters<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> i3 <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n\n    positions<span class=\"token punctuation\">[</span>i3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span>  <span class=\"token comment\">// x</span>\n    positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\">// y</span>\n    positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token comment\">// z</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>반복문(for) <br/></li>\n</ul>\n<p>parameters.count(1000번) 반복하여 각 점의 x, y, z 좌표를 계산한다.</p>\n<ul>\n<li>Math.random() <br/></li>\n</ul>\n<p>Math.random()은 0과 1 사이의 랜덤 값을 반환한다.\n-0.5를 빼고 3을 곱하여 값의 범위를 -1.5 ~ 1.5로 설정한다.</p>\n<ul>\n<li>좌표 계산 <br/></li>\n</ul>\n<p>positions[i3]: x 좌표<br/>\npositions[i3 + 1]: y 좌표<br/>\npositions[i3 + 2]: z 좌표<br/>\n=> 3D 공간에 무작위로 배치된 점의 위치를 설정한다.</p>\n<p><strong>왜 이런 방식을 사용할까?</strong> <br/>\nMath.random()만 사용하면 점들이 0 ~ 1 사이에 분포하므로, 좌표의 중심이 0이 아니라 0.5가 된다. <br/>\n-0.5를 빼면 좌표의 중심이 0으로 이동한다.\n그리고 곱하기 연산(* 3)으로 점의 분포 범위를 조정하여 원하는 크기의 공간에 맞춘다.</p>\n<h3 id=\"code-classlanguage-textbuffergeometry에-좌표-데이터-설정code\" style=\"position:relative;\"><a href=\"#code-classlanguage-textbuffergeometry%EC%97%90-%EC%A2%8C%ED%91%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%A4%EC%A0%95code\" aria-label=\"code classlanguage textbuffergeometry에 좌표 데이터 설정code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">BufferGeometry에 좌표 데이터 설정</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'position'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>BufferAttribute</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>BufferAttribute는 Float32Array를 기반으로 데이터를 관리한다.<br/></li>\n<li>positions 배열을 position 속성으로 설정하여 BufferGeometry에 정점 데이터를 추가한다 <br/></li>\n<li>3은 각 점이 x, y, z 세 가지 좌표로 구성됨을 의미한다.</li>\n</ul>\n<h3 id=\"code-classlanguage-textpointsmaterial로-재질material-생성code\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpointsmaterial%EB%A1%9C-%EC%9E%AC%EC%A7%88material-%EC%83%9D%EC%84%B1code\" aria-label=\"code classlanguage textpointsmaterial로 재질material 생성code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">PointsMaterial로 재질(Material) 생성</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>PointsMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> parameters<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sizeAttenuation</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">depthWrite</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">blending</span><span class=\"token operator\">:</span> <span class=\"token constant\">THREE</span><span class=\"token punctuation\">.</span>AdditiveBlending\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>PointsMaterial란?</strong><br/>\nPointsMaterial은 3D 공간에서 점(point)을 렌더링하기 위한 재질이다.\n이 재질은 각 점에 대한 시각적 속성을 정의한다. (크기, 색상, 투명도 등)</p>\n<ul>\n<li>재질 속성 설명</li>\n</ul>\n<p><code class=\"language-text\">size: parameters.size</code><br/>\n점의 크기를 지정한다.\nparameters.size = 0.02로 설정되어 있으므로 각 점이 작고 세밀하게 보이게 만든다. <br/>\n<code class=\"language-text\">sizeAttenuation: true</code><br/>\n점의 크기가 카메라의 거리에 따라 조정될지 여부를 설정한다.\ntrue로 설정하면, 카메라에서 멀어질수록 점이 작아지고, 가까울수록 커진다. (원근 효과) <br/>\n<code class=\"language-text\">depthWrite: false</code><br/>\n점이 다른 객체와의 깊이(depth) 테스트에 영향을 주지 않도록 설정한다.\n이는 반투명 효과와 빛나는 효과를 자연스럽게 표현하기 위함이다. <br/>\n<code class=\"language-text\">blending: THREE.AdditiveBlending</code><br/>\n가산 혼합(Additive Blending)을 사용하여 점들이 겹칠 때 빛나는 효과를 만든다. <br/>\n겹쳐진 점들의 색상이 더해져 밝아지는 효과를 만들어낸다.<br/>\n은하처럼 빛이 쏟아지는 느낌을 준다.</p>\n<h3 id=\"code-classlanguage-textpoints로-점을-생성code\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpoints%EB%A1%9C-%EC%A0%90%EC%9D%84-%EC%83%9D%EC%84%B1code\" aria-label=\"code classlanguage textpoints로 점을 생성code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">points로 점을 생성</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Points</span><span class=\"token punctuation\">(</span>geometry<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">)</span>\nscene<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Points란?</strong> <br/>\nPoints는 Three.js에서 점 클라우드(point cloud)를 생성하는 데 사용되는 클래스이다. <br/>\n기하학(geometry)과 재질(material)을 결합하여 점 데이터를 3D 공간에 표시한다.</p>\n<p>geometry는 점들의 좌표 정보를 담고 있다.(이전 코드에서 생성한 BufferGeometry)\n그리고 각 점의 위치를 정의한다. <br/>\nmaterial은 각 점이 화면에 어떻게 표시될지(크기, 색상, 투명도 등)를 정의한다.</p>\n<h3 id=\"3-나선형-모양-만들기\" style=\"position:relative;\"><a href=\"#3-%EB%82%98%EC%84%A0%ED%98%95-%EB%AA%A8%EC%96%91-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"3 나선형 모양 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 나선형 모양 만들기</h3>\n<p><code class=\"language-text\">Radius parameter만들기</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">parameters<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>radius\n</code></pre></div>\n<p>radius는 각 점(별)이 중심에서 얼마나 떨어져 있는지를 나타내는 거리 값이다. <br/>\nparameters.radius는 설정 가능한 값으로, 은하의 최대 반지름을 정의한다.\n이 값은 은하의 크기를 결정한다.\n예를 들어, parameters.radius = 5라면 점들이 중심에서 0에서 5 사이의 거리 안에 위치하게 된다.</p>\n<p><strong>Math.random() * parameters.radius</strong>를 계산하면,\n점 하나가 중심에서 떨어진 거리가 0에서 parameters.radius 사이의 랜덤 값으로 설정된다.</p>\n<p><code class=\"language-text\">나선형은하의 Branch만들기</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">parameters<span class=\"token punctuation\">.</span>branches <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> parameters<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> i3 <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n  <span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>radius\n  <span class=\"token keyword\">const</span> branchAngle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> parameters<span class=\"token punctuation\">.</span>branches<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> parameters<span class=\"token punctuation\">.</span>branches <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n  positions<span class=\"token punctuation\">[</span>i3    <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>branchAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius\n  positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>branchAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><strong>branchAngle 계산</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> branchAngle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> parameters<span class=\"token punctuation\">.</span>branches<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> parameters<span class=\"token punctuation\">.</span>branches <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></code></pre></div>\n<p><strong>i % parameters.branches</strong>에서 i는 점의 인덱스이고, parameters.branches는 은하의 branch 갯수이다. <br/>\ni % parameters.branches 값을 branch 개수로 나누어, 현재 점이 해당 branch에서 차지하는 상대적인 위치를 0에서 1 사이의 비율로 변환한다. <br/>\n<strong>Math.PI * 2</strong>는 360도(2π 라디안)를 의미한다. <br/>\n비율 값을 곱하면, 현재 점이 중심을 기준으로 몇 도(라디안)인지를 계산한다. <br/>\n예를들어 parameters.branches = 3일 때, <br/>\ni = 0 → branchAngle = 0 → 0도 <br/>\ni = 1 → branchAngle = (1/3) * 2π → 약 120도 <br/>\ni = 2 → branchAngle = (2/3) * 2π → 약 240도 <br/></p>\n<ul>\n<li><strong>Math.cos와 Math.sin의 역할</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">positions<span class=\"token punctuation\">[</span>i3    <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>branchAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius <span class=\"token comment\">// x 좌표</span>\npositions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>                              <span class=\"token comment\">// y 좌표</span>\npositions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>branchAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius <span class=\"token comment\">// z 좌표</span></code></pre></div>\n<p><strong>Math.cos</strong>는 주어진 각도에서 x축 방향의 값(코사인)을 반환한다. <br/>\n<strong>Math.sin</strong>은 주어진 각도에서 z축 방향의 값(사인)을 반환한다. <br/>\n이 두 값은 특정 각도에서 점의 x, z 좌표를 계산한다. <br/>\n예)\nbranchAngle = 0 → (x, z) = (1, 0)\nbranchAngle = π/2 → (x, z) = (0, 1)\nbranchAngle = π → (x, z) = (-1, 0)</p>\n<p><strong>radius를 곱하는 이유?</strong> <br/>\n계산된 cos와 sin 값에 radius를 곱하면 점이 중심에서 얼마나 떨어져 있는지를 설정된다.\n즉, 점이 중심에서 radius 거리만큼 떨어진 위치에 놓이게 된다.</p>\n<p>위와 같이하면 다음과 같은 3개의 branch가 만들어진다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/0e32e022-51b9-44d0-b635-52b25afb55f7/image.png\n\" width=\"400px\" height=\"400px\">\n</p>\n<p><code class=\"language-text\">나선형 은하에 spin effect주기</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">parameters<span class=\"token punctuation\">.</span>spin <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">const</span> spinAngle <span class=\"token operator\">=</span> radius <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>spin</code></pre></div>\n<p><strong>parameters.spin</strong>은 은하 branch가 얼마나 많이 감길지를 결정하는 값이다. <br/>\n값이 클수록 점이 더 많이 회전한다. 값이 음수이면 회전 방향이 반대가 된다.\nspinAngle 계산은 radius와 parameters.spin의 곱으로 계산된다.\n점이 중심에서 멀어질수록(radius 증가) spinAngle 값이 더 커져, 점이 더 많이 회전하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    positions<span class=\"token punctuation\">[</span>i3    <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>branchAngle <span class=\"token operator\">+</span> spinAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius\n    positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>branchAngle <span class=\"token operator\">+</span> spinAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius</code></pre></div>\n<p>기존에 <strong>branchAngle</strong>로 계산한 은하 branch의 기본 각도에 <strong>spinAngle</strong>을 추가한다. <br/>\n결과적으로, 중심에서 가까운 점은 spinAngle 값이 작아서 거의 직선 형태를 유지한다. 중심에서 먼 점은 spinAngle 값이 커져 더 많이 회전하며 나선형 곡선 형태를 형성한다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/4338a87b-2b49-4ce3-9f1b-5337b0b8c503/image.png\n\" width=\"400px\" height=\"400px\">\n</p>\n<h3 id=\"4-별들을-random하게-배치하기\" style=\"position:relative;\"><a href=\"#4-%EB%B3%84%EB%93%A4%EC%9D%84-random%ED%95%98%EA%B2%8C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"4 별들을 random하게 배치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 별들을 random하게 배치하기</h3>\n<p>현재상태에서는 점들이 각 branch에 완벽히 정렬되어 있다.\n점들이 너무 기계적으로 배치되어, 은하가 비현실적으로 보일 수 있다.\n각 점의 위치에 랜덤한 요소(randomness)를 추가하여 더 현실적인 은하 형태를 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span>\n<span class=\"token keyword\">const</span> randomX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius\n<span class=\"token keyword\">const</span> randomY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius\n<span class=\"token keyword\">const</span> randomZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius</code></pre></div>\n<p>나선형 은하의 점(particle)들을 랜덤하게 흩뿌리는 효과를 추가한다. <br/>\n<strong>a. Math.random() - 0.5</strong> <br/>\n-0.5를 빼서 결과를 -0.5에서 0.5 사이의 범위로 변환한다.랜덤 값을 중심을 기준으로 양방향으로 분포시키기 위해 사용한다.</p>\n<p><strong>b. parameters.randomness</strong> <br/>\n랜덤 값의 크기를 조정하는 파라미터로  값이 클수록 점들이 더 많이 흩어지며, 은하가 더 불규칙하게 보인다.</p>\n<p><strong>c. * radius</strong> <br/>\n점이 중심에서 멀어질수록 랜덤 값의 크기를 증가시킨다.\n이는 은하 중심부에서는 점들이 더 집중되고, 외곽으로 갈수록 점들이 더 흩어지는 효과를 만든다.</p>\n<p><strong>x좌표 계산</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">positions<span class=\"token punctuation\">[</span>i3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>branchAngle <span class=\"token operator\">+</span> spinAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius <span class=\"token operator\">+</span> randomX</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.cos(branchAngle + spinAngle) * radius</code>는 기존의 은하 branch 상에서 점의 x 좌표로 점이 은하 branch의 곡선을 따르도록 설정한다.</li>\n<li><code class=\"language-text\">+ randomX</code>: 기존 좌표에 랜덤한 값을 더해 점의 위치를 약간 어긋나게 만든다.</li>\n</ul>\n<p><strong>y 좌표 계산</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> randomY</code></pre></div>\n<p>기존 코드에서 y 좌표는 항상 0으로 설정되어 평면에 존재한다. 여기에 randomY를 더해 점들이 위아래로도 분포되도록 설정한다.</p>\n<p><strong>z 좌표 계산</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  positions<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>branchAngle <span class=\"token operator\">+</span> spinAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius <span class=\"token operator\">+</span> randomZ</code></pre></div>\n<p>기존의 은하 팔(branch) 상에서 점의 z 좌표에 점이 은하 branch의 곡선을 따르도록 설정한다.\n여기에 randomZ를 더해 점의 위치를 약간 어긋나게 만든다.</p>\n<p>그럼 아래와 같이 나선형 모양 은하에 별들이 random하게 배치된다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/6b08d16f-0562-40a5-8948-6cb3cffb1a67/image.png\" width=\"400px\" height=\"400px\">\n</p>\n<h3 id=\"5-은하의-별들이-더-자연스럽게-흩어지고-일정한-패턴이-덜-보이게-만들기\" style=\"position:relative;\"><a href=\"#5-%EC%9D%80%ED%95%98%EC%9D%98-%EB%B3%84%EB%93%A4%EC%9D%B4-%EB%8D%94-%EC%9E%90%EC%97%B0%EC%8A%A4%EB%9F%BD%EA%B2%8C-%ED%9D%A9%EC%96%B4%EC%A7%80%EA%B3%A0-%EC%9D%BC%EC%A0%95%ED%95%9C-%ED%8C%A8%ED%84%B4%EC%9D%B4-%EB%8D%9C-%EB%B3%B4%EC%9D%B4%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"5 은하의 별들이 더 자연스럽게 흩어지고 일정한 패턴이 덜 보이게 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 은하의 별들이 더 자연스럽게 흩어지고, 일정한 패턴이 덜 보이게 만들기</h3>\n<p>좀 더 은하들이 흩어지고 자연스러운 은하로 보이게 하기 위해 코드를 수정해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> randomX <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">.</span>randomnessPower<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius\n<span class=\"token keyword\">const</span> randomY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">.</span>randomnessPower<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius\n<span class=\"token keyword\">const</span> randomZ <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">.</span>randomnessPower<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> parameters<span class=\"token punctuation\">.</span>randomness <span class=\"token operator\">*</span> radius</code></pre></div>\n<p>a. parameters.randomnessPower <br/>\n이 값이 클수록 (예: 2) 더 큰 값으로 위쪽으로 변하고, 값이 작을수록 (예: 0.5) 값이 평평하게 분포한다.\n이를 통해 외곽의 별들이 더 퍼지게 하고, 중심부는 더 촘촘하게 유지할 수 있다.</p>\n<p>b. 부호 반전 <br/>\n<code class=\"language-text\">(Math.random() &lt; 0.5 ? 1 : -1)</code>\n부호를 랜덤하게 바꿔 점이 양쪽으로 균등하게 퍼지게 만든다.\n예를 들어, randomX가 음수일 때는 왼쪽으로, 양수일 때는 오른쪽으로 퍼지게 되며, 다른 두 좌표(randomY, randomZ)도 동일한 방식으로 적용된다.</p>\n<p>이렇게 코드를 변경해주면, 아래와 같이 별들이 더 흩어지며 자연스러운 은하 형태를 만든다.</p>\n<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/fd33f582-e6bb-41b9-a579-de1e15331994/image.png\" width=\"400px\" height=\"400px\">\n</p>\n<h3 id=\"6-은하에-색상-추가하기\" style=\"position:relative;\"><a href=\"#6-%EC%9D%80%ED%95%98%EC%97%90-%EC%83%89%EC%83%81-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"6 은하에 색상 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 은하에 색상 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">parameters<span class=\"token punctuation\">.</span>insideColor <span class=\"token operator\">=</span> <span class=\"token string\">'#ff6030'</span>\nparameters<span class=\"token punctuation\">.</span>outsideColor <span class=\"token operator\">=</span> <span class=\"token string\">'#1b3984'</span>\n\nmaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>PointsMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span> parameters<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">sizeAttenuation</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">depthWrite</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">blending</span><span class=\"token operator\">:</span> <span class=\"token constant\">THREE</span><span class=\"token punctuation\">.</span>AdditiveBlending<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">vertexColors</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>각 vertex마다 색을 주기 위해 vertexColors를 true로 준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> colorInside <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Color</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">.</span>insideColor<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> colorOutside <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>Color</span><span class=\"token punctuation\">(</span>parameters<span class=\"token punctuation\">.</span>outsideColor<span class=\"token punctuation\">)</span></code></pre></div>\n<p>중심에 가까운 별은 색이 insideColor에 가깝고, 중심에서 멀어질수록 점점 outsideColor로 변하는 효과를 주는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mixedColor <span class=\"token operator\">=</span> colorInside<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmixedColor<span class=\"token punctuation\">.</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span>colorOutside<span class=\"token punctuation\">,</span> radius <span class=\"token operator\">/</span> parameters<span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>colorInside.clone() ?</strong> <br/>\ncolorInside를 복제하여 mixedColor를 만든다.\nclone()을 사용하여 원본 색을 그대로 유지하면서, 새로운 객체에서 혼합 작업을 할 수 있게 만드는 것이다.</p>\n<p><strong>mixedColor.lerp(colorOutside, radius / parameters.radius) ?</strong> <br/>\nlerp()는 선형 보간(Linear Interpolation)을 사용하여 두 색상 사이의 혼합을 계산한다.</p>\n<ul>\n<li>첫 번째 매개변수: colorOutside — 혼합될 목표 색상.</li>\n<li>두 번째 매개변수: radius / parameters.radius — 혼합 정도를 결정하는 값으로, radius는 현재 별의 중심으로부터의 거리이고, parameters.radius는 전체 은하의 크기이다.</li>\n</ul>\n<p><strong>radius / parameters.radius</strong>가 0이면 색은 colorInside로 유지되고, 1이면 색은 colorOutside로 완전히 변한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">colors<span class=\"token punctuation\">[</span>i3    <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mixedColor<span class=\"token punctuation\">.</span>r\ncolors<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mixedColor<span class=\"token punctuation\">.</span>g\ncolors<span class=\"token punctuation\">[</span>i3 <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> mixedColor<span class=\"token punctuation\">.</span>b</code></pre></div>\n<p>colors 배열은 각 별의 색상 정보를 담고 있으며, r, g, b는 각각 빨강, 초록, 파랑 색상의 값이다.\nmixedColor.r, mixedColor.g, mixedColor.b는 혼합된 색의 빨강, 초록, 파랑 값을 가져와 각 별의 색상 배열에 할당한다.</p>\n<p align=\"center\">\n  <img src=\"https://velog.velcdn.com/images/chloeee/post/e298f649-f6cb-4d36-b3c1-7cd5c9b315a1/image.png\" width=\"400px\" height=\"400px\">\n  <img src=\"https://velog.velcdn.com/images/chloeee/post/da9cb685-80a1-4588-bef0-29aa48c14b57/image.png\" width=\"400px\" height=\"400px\">\n</p>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li>Three.js journey</li>\n</ul>","frontmatter":{"title":"Three.js-Galaxy Generator 만들기","date":"January 05, 2025","image":"https://velog.velcdn.com/images/chloeee/post/30acd145-6e4c-404f-9a43-71d14aa2fdd8/image.png"}}},"pageContext":{"slug":"/three.js/galaxy-generator/","previous":{"fields":{"slug":"/three.js/three.js_first_project/"},"frontmatter":{"title":"Three.js Project - 달 구현해보기 🌕"}},"next":{"fields":{"slug":"/react/react-19/"},"frontmatter":{"title":"React 19의 새로운 기능"}}}},"staticQueryHashes":["2486386679","3128451518"]}