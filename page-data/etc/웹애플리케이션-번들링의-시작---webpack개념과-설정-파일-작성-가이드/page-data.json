{"componentChunkName":"component---src-templates-blog-post-js","path":"/etc/웹애플리케이션-번들링의-시작---webpack개념과-설정-파일-작성-가이드/","result":{"data":{"site":{"siteMetadata":{"title":"프론트엔드 로그 by 굥 🐳","author":"굥","siteUrl":"https://bokim1004.github.io","comment":{"disqusShortName":"https-bokim1004-github-io","utterances":"bokim1004/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"396a4583-99fa-50c5-a725-162dd31fdabd","excerpt":"Intro 최근에 Next.js로 개발하는 프로젝트가 있었다.\n신입분이 간단한 UI를 개발하시고, 내가 JS쪽 구조를 잡거나 webpack쪽 코드를 작성했어야 했다.\n보통 webpack쪽 코드는 시니어분들이 작성해주셨기에 엄청 볼일은 없었는데 이번기회에 webpack쪽 코드를 열심히 들여다봤다. 그런데 알 수 없는 에러가 났다. \n이 에러가 웹팩쪽에서 발생하는데 원인을 모르겠는 것이다.\n이 에러를 해결하기 위해 혼자 끙끙대다가 리더가 힌트를 주셨다.  내가 작성한 JS쪽 코드는 next…","html":"<p align=\"center\">\n<img src=\"https://velog.velcdn.com/images/chloeee/post/0b73df01-888a-4531-88f4-a42c78034981/image.png\" width=\"500px\" height=\"200px\">\n</p>\n<h3 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h3>\n<p>최근에 Next.js로 개발하는 프로젝트가 있었다.\n신입분이 간단한 UI를 개발하시고, 내가 JS쪽 구조를 잡거나 webpack쪽 코드를 작성했어야 했다.\n보통 webpack쪽 코드는 시니어분들이 작성해주셨기에 엄청 볼일은 없었는데 이번기회에 webpack쪽 코드를 열심히 들여다봤다. 그런데 알 수 없는 에러가 났다. <br/>\n<code class=\"language-text\">Error: Conflict: Multiple chunks emit assets to the same filename</code>이 에러가 웹팩쪽에서 발생하는데 원인을 모르겠는 것이다.\n이 에러를 해결하기 위해 혼자 끙끙대다가 리더가 힌트를 주셨다. <br/></p>\n<p>내가 작성한 JS쪽 코드는 next.config.js를 안타는데 난 웹팩 코드를 여기서 작성하고 있었던 것이다. next.js 코드를 위해 따로 next.config.js를 남겨두고\n이 프로젝트의 핵심 코드가 담겨있는 JS용 webpack.config.js를 신규 생성했다.\n이렇게 하니 문제가 해결되었다..!\n웹팩쪽 코드가 여전히 익숙하지 않아서 이번 기회에 더 공부를 해봐야겠다는 생각이 들어서 이번 글 주제로 잡아 보았다.</p>\n<br/>\n<hr>\n<br/>\n<p>프론트엔드 개발을 하다보면 <code class=\"language-text\">\"모듈\"</code>이라는 개념을 접하게 된다. <br/>\nHTML,CSS,Javascript파일뿐만 아니라 이미지,폰트,JSON등 다양한 파일을 하나의 애플리케이션으로 묶어야 하는데 이 때 필요한 것이\n<code class=\"language-text\">번들링</code>이다. 이 과정에서 주로 사용하는 도구가 바로  <strong>webpack</strong>이다. webpack은 모듈을 효과적으로 관리하고 최적화된 방식으로 빌드할 수 있게 돕는다.</p>\n<h3 id=\"div-stylebackgroundfcf475-colorblack-padding7px-1-webpack은-무엇인가-div\" style=\"position:relative;\"><a href=\"#div-stylebackgroundfcf475-colorblack-padding7px-1-webpack%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-div\" aria-label=\"div stylebackgroundfcf475 colorblack padding7px 1 webpack은 무엇인가 div permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><div style=\"background:#FCF475; color:black; padding:7px\"> 1. webpack은 무엇인가? </div></h3>\n<p>webpack은 JavaScript 애플리케이션을 위한 정적 모듈 번들러이다. <br/>\n여러 파일과 모듈을 하나의 파일로 묶어 최적화된 결과물을 만들어준다.</p>\n<h4 id=\"code-classlanguage-text왜-webpack을-사용하는-걸까code\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EC%99%9C-webpack%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B1%B8%EA%B9%8Ccode\" aria-label=\"code classlanguage text왜 webpack을 사용하는 걸까code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">왜 webpack을 사용하는 걸까?</code></h4>\n<p>• 파일을 최대한 작게 만들어 페이지 로딩 속도를 개선하기 위해<br/>\n• 의존성 관리를 통해 서로 연관된 파일들을 안전하게 사용하기 위해<br/>\n• 복잡한 모듈을 관리하고, 불필요한 코드를 제거하여 최적화하기 위해</p>\n<h3 id=\"div-stylebackgroundfcf475-colorblack-padding7px-2-webpack의-기본-동작-원리-div\" style=\"position:relative;\"><a href=\"#div-stylebackgroundfcf475-colorblack-padding7px-2-webpack%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-div\" aria-label=\"div stylebackgroundfcf475 colorblack padding7px 2 webpack의 기본 동작 원리 div permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><div style=\"background:#FCF475; color:black; padding:7px\"> 2. webpack의 기본 동작 원리 </div></h3>\n<p>webpack은 크게 다음과 같은 요소로 구성되어 있다.</p>\n<h4 id=\"code-classlanguage-text1-엔트리-entrycode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text1-%EC%97%94%ED%8A%B8%EB%A6%AC-entrycode\" aria-label=\"code classlanguage text1 엔트리 entrycode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(1) 엔트리 entry</code></h4>\n<p>애플리케이션 진입점이 되는 파일이다. webpack은 여기서부터 파일을 분석하고 의존성을 추적해서 필요한 파일들을 번들에 포함하게 된다.</p>\n<p>난 아래와 같은 형식으로 entry를 작성해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'./JS/A/A.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./JS/B/B.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./JS/C/C.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'./JS/main/Main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-text2-출력-outputcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text2-%EC%B6%9C%EB%A0%A5-outputcode\" aria-label=\"code classlanguage text2 출력 outputcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(2) 출력 output</code></h4>\n<p>번들링 결과를 어디에, 어떻게 저장할지 정의하는 역할을 한다. 일반적으로 하나의 파일로 묶여 저장된다.\n난 아래와 같은 형식으로 output을 작성해주었다. output.filename, output.path속성을 사용해서 webpack에 번들의 이름과 내보낼 위치를 알려준 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public/js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'Main.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"code-classlanguage-text3-로더-loadercode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text3-%EB%A1%9C%EB%8D%94-loadercode\" aria-label=\"code classlanguage text3 로더 loadercode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(3) 로더 loader</code></h4>\n<p>웹팩은 기본적으로 Javascript와 JSON파일만 이해한다. 로더를 사용하면 webpack이 다른 파일의 유형을 처리할 수 있게 된다.<br/>\nJavascript외의 파일 (css,이미지 등)을 웹 애플리케이션에 포함할 수 있게 한다. 예를 들어 CSS파일을 로드하려면 <code class=\"language-text\">css-loader</code>가 필요하다.</p>\n<p>로더는 webpack 설정에 2가지 속성을 가진다.</p>\n<ol>\n<li>변환이 필요한 파일을 식별하는 <code class=\"language-text\">test</code> 속성</li>\n<li>변환을 수행하는데 사용되는 로더를 가리키는 <code class=\"language-text\">use</code>속성</li>\n</ol>\n<p>난 아래와 같이 babel-loader를 추가해줬다.\n이는 웹팩에서 <code class=\"language-text\">Babel</code>을 사용할 수 있도록 해주는 로더이다.<br/>\nBabel은 최신 자바스크립트 문법(ES6,ES7+)이나 JSX코드를\n구형 브라우저에서도 동작할 수 있게 ES5문법으로 변환하는 트랜스파일러다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"code-classlanguage-text4-플러그인-pluginscode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text4-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-pluginscode\" aria-label=\"code classlanguage text4 플러그인 pluginscode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(4) 플러그인 plugins</code></h4>\n<p>플러그인은 번들링 과정 중 다양한 기능을 추가하는 역할을 한다. 로더가 파일별로 적용된다면 플러그인 번들링 전반에 영향을 미치는 특징이 있다.\nnew연산자로 호출해 플러그읜의 인스턴스를 만들어서 배열에 추가해야 한다.\n난 아래와 같이 플러그인을 추가해줬다.</p>\n<p><strong>CleanWebpackPlugin</strong></p>\n<ul>\n<li>이것의 역할은 매 빌드 전에 이전 빌드 결과물을 자동으로 삭제해준다. [‘js’]를 지정하면, 빌드할때마다 <code class=\"language-text\">.js</code>파일이 삭제된다.</li>\n<li>이 플러그인은 웹팩 기본 플러그인이 아니므로 별도로 설치해야 한다. <code class=\"language-text\">npm install --save-dev clean-webpack-plugin</code></li>\n</ul>\n<br/>\n<p><strong>DefinePlugin</strong></p>\n<ul>\n<li>DefinePlugin은 코드 내에서 전역 상수처럼 사용할 수 있는 변수를 정의할 수 있게 한다. 예를들어 API_BASE_PATH라고 변수를 지정하면 빌드 시점에 코드에서 해당 변수를 사용해 환경에 다라 다른 값을 주입할 수 있다. 이렇게 하면 코드 내에서 환경별 설정을 쉽게 변경할 수 있다.</li>\n<li>DefinePlugin은 웹팩 기본 플러그인이기에 별도 설치필요는 없다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> environment <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">CleanWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cleanAfterEveryBuildPatterns</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">API_BASE_PATH</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAPIUrl</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">API_V2_BASE_PATH</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token function\">getV2Url</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">BASE_URL</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token function\">baseUrl</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">ENV</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"code-classlanguage-text5--modecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text5--modecode\" aria-label=\"code classlanguage text5  modecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(5)  Mode</code></h4>\n<p>mode 파라미터를 development, production 또는 none으로 설정하면 webpack에 내장된 환경별 최적화를 활성화 할 수 있다.<br/>\n기본값은 production 이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">env</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> environment <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> environment <span class=\"token operator\">?</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'development'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"code-classlanguage-text6-optimizationcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-text6-optimizationcode\" aria-label=\"code classlanguage text6 optimizationcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">(6) Optimization</code></h4>\n<p>웹팩의 Optimization옵션은 번들 크기를 줄이고, 로딩 속도를 개선하고, 최적화된 코드를 생성할 수 있게 하는 다양한 설정을 포함한다.\n이 옵션을 통해 코드 스플리팅, 압축 등의 여러가지 성능 최적화 작업을 수행할 수 있다.<br/>\n난 아래와 같은 형식으로 코드를 추가해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">optimization</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">minimize</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'staging'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">minimizer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">TerserPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">extractComments</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">terserOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">compress</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">drop_console</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">drop_debugger</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">pure_funcs</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'production'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span>\n              <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'console.log'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'console.info'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'console.debug'</span><span class=\"token punctuation\">]</span>\n              <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>minimize 설정</strong></p>\n<ul>\n<li>빌드 환경이 production, staging, development일 때만 코드 압축을 적용하도록 설정한다. 즉, 해당 환경에서만 번들이 압축되어 배포된다.</li>\n</ul>\n<p><strong>TerserPlugin 설정</strong></p>\n<ul>\n<li>TerserPlugin을 사용하여 압축을 수행하며, <code class=\"language-text\">extractComments:false</code>옵션으로 주석을 제거하고 <code class=\"language-text\"> test: /\\.js$/</code> 옵션으로 Javascript파일에만 압축을 적용한다.</li>\n<li>TerserPlugin은 기본적으로 웹팩에 포함되지 않은 별도의 패키지이기 때문에, 사용하려면 설치해야 한다.\n<ul>\n<li><code class=\"language-text\">npm install terser-webpack-plugin --save-dev</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>환경에 따른 압축 세부 설정</strong></p>\n<ul>\n<li><code class=\"language-text\">drop_console, drop_debugger</code>: production 환경일 경우 console과 debugger 관련 코드가 최종 번들에서 제거된다.</li>\n<li><code class=\"language-text\">pure_funcs</code>: production 환경일 때 console.log, console.info, console.debug 같은 콘솔 관련 함수 호출이 제거된다. 이를 통해 불필요한 로그 함수 호출을 줄여 번들 크기를 줄일 수 있다.</li>\n</ul>\n<br/> \n<hr>\n<h3 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h3>\n<p>이번 글에서는 webpack의 기본 개념과 파일 작성 방법을 알아보았다.<br/>\n이번 기회에 webpack의 구성요소들을 보며 어떻게 동작하는지 더 잘 알 수 있게 된 것 같다.\n이 글을 통해 webpack에 대한 큰 그림을 이해하고 <code class=\"language-text\">webpack.config.js</code>파일을 작성하는데 도움이 되기를 바라며 글을 마쳐본다.</p>\n<p>참고 :<a href=\"https://webpack.kr/concepts/\">https://webpack.kr/concepts/</a></p>","frontmatter":{"title":"웹 애플리케이션 번들링의 시작 - webpack개념과 설정 파일 작성 예시","date":"October 27, 2024","image":"https://velog.velcdn.com/images/chloeee/post/649c3922-2d20-476a-97c7-c269623785d6/image.png"}}},"pageContext":{"slug":"/etc/웹애플리케이션-번들링의-시작---webpack개념과-설정-파일-작성-가이드/","previous":{"fields":{"slug":"/etc/10th-start/"},"frontmatter":{"title":"글또 10기를 시작하며"}},"next":{"fields":{"slug":"/three.js/camera-in-three.js/"},"frontmatter":{"title":"Three.js에서의 카메라 이해하기"}}}},"staticQueryHashes":["2486386679","3128451518"]}