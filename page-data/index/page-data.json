{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"프론트엔드 기록 by chloee 🐳","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"들어가며 벌써 항해가 8주차가 흘렀다. 3챕터의 큰 주제는 테스트코드였다.\n테스트 코드는 실무에서 cypress로 e2e테스트만 해봤는데, 이번 챕터 과제를 하며 유닛테스트, 통합테스트, e2e 모두를 아우를 수 있는 테스트를 경험해볼 수 있었다.\n그만큼 힘들었지만(?) 뿌듯했던 시간을 보낼 수 있게 해주었던 과제였던 것 같다. 과제를 하며 배운 점 1.…","fields":{"slug":"/etc/hanghae-fe-5th-3chapter.retro/"},"frontmatter":{"date":"May 25, 2025","title":"항해플러스 프론트엔드 5기 | 3챕터 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 5주차 과제는 클린코드로 리팩토링하는 것이 필요했는데 계층을 이해하고 분리하여 정리정돈을 하는 기준이나 방법등을 습득하는 것이 목표였다.\n기본과제, 심화과제의 요구사항을 분석하며 어떤식으로 개발할지 초반에 정리하는 시간을 먼저 가졌다.\n과제의 핵심취지를 분석한 후, 계층을 이해하며 개발해야함을 알고 이번 과제의 개발 방향을 세웠다.\n엔티티 개념이…","fields":{"slug":"/etc/hanghae-fe-5th-week5-retro/"},"frontmatter":{"date":"April 27, 2025","title":"항해플러스 프론트엔드 5기 5주차 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 4주차 과제는 더티코드 개선하기!! 생각보다 양이 많아서 놀랐던 과제였다. 쉬운줄 알았지만 절대 쉽지 않았다.\n이번에 배운 것을 토대로 더 가독성 좋고 협업하기 좋은 코드를 작성하는 것을 목표로 해야겠다는 생각이 들었다. 💩 1. 더티코드 개선하기 (basic 과제) 더티코드를 처음 접했을 때, 정말 보기 어렵고 어떻게 개선하면 좋을지 고민이 많…","fields":{"slug":"/etc/hanghae-fe-5th-week4-retro/"},"frontmatter":{"date":"April 21, 2025","title":"항해플러스 프론트엔드 5기 4주차 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 3주차 과제는 hook을 직접 구현해보며, 동작원리를 살펴보는 시간을 가졌다. 내가 몰랐던 부분들을 알게 되는 과정이 재밌었던 시간이었다. ✨과제 셀프회고 이번 과제를 통해 내가 궁극적으로 얻고 싶었던 것은 Hook을 직접 구현해보며 동작을 제대로 이해해 보는 것이었다.\n,,를 실무에서 사용해봤으나 제대로 사용해서 성능 최적화를 하고 있나에 대한…","fields":{"slug":"/etc/hanghae-fe-5th-week3-retro/"},"frontmatter":{"date":"April 13, 2025","title":"항해플러스 프론트엔드 5기 3주차 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 벌써 2주차가 지났고 3주차에 들어가게 되었다. 2주차의 과제 주제는 바로 virtualDom을 직접 구현하고 가상돔을 돔으로 변환하는 것이었다.\n말로만 들어도 어렵겠다 생각했는데, 정말 쉽지 않은 과제였다.\n많은 어려움들이 있었지만 운이 좋게 과제를 마무리할 수 있었다. 어떤 문제가 있었고 어떻게 해결했는지 정리해보았다-! 🌟 이번 과제를 통해…","fields":{"slug":"/etc/hanghae-fe-5th-week2-retro/"},"frontmatter":{"date":"April 06, 2025","title":"항해플러스 프론트엔드 5기_2주차 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 항해플러스 프론트엔드 1주차가 드디어 시작되었다.\n항해플러스 과정에 대한 이야기는 많이 들었는데, 생각보다 빡세지만 배우는게 많다는 후기가 많아서 지원하게 되었다. \n난 어떤 환경안에 있는지 굉장히 중요한 사람이라 들어오길 참 잘했다는 생각이 든 1주였다.\n1주차 과제는 vanilla JS로 SPA를 개발하는 것이었다. vanilla JS로 개발…","fields":{"slug":"/etc/hanghae-fe-5th-week1-retro/"},"frontmatter":{"date":"March 30, 2025","title":"항해플러스 프론트엔드 5기 | 1주차 회고","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/db477a29-3257-42ee-b936-58629e0ef09f/image.png"}}},{"node":{"excerpt":"들어가며 오랜만에 Vanilla JS로 개발을 해볼 일이 생겼다.Vanilla JS로 SPA 구현하기를 진행하다보니 라우팅 구현을 두 가지 방식으로 구현할 수 있다는 것을 알게 되었다.\n바로 History API를 이용한 와 이다. 이 두 방식의 차이와 동작 원리를 더 깊이 이해하고 싶어졌고, 실제로 라우팅 시 겪었던 이슈들도 함께 정리해봤다. 🔍 1. …","fields":{"slug":"/javascript/vanillaJs_router/"},"frontmatter":{"date":"March 25, 2025","title":"Vanilla JS에서 브라우저 라우터와 Hash 라우터의 차이","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/01cbf681-55d4-4e05-8213-d77755bc899b/image.png"}}},{"node":{"excerpt":"NPM패키지를 한번도 publish해본 경험이 없어서 이번 기회에 경험삼아 만들어보고 싶었다.\n패키지 작성부터 빌드, publish까지 “한 번 만들어보면 별거 아니지만, 해보기 전까지는 어렵게 느껴진다”라는 말을 듣고 이번 기회에 도전해보기로 했다.\nNPM패키지를 작성해보면서 어떻게 패키지를 만들어야하는지 살펴보고, 실제 publish까지 해본 과정을 …","fields":{"slug":"/react/react-popup-draggable-resizable-npm-만들기/"},"frontmatter":{"date":"March 16, 2025","title":"npm 패키지 만들어보기 (react-popup-draggable-resizable)","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/68714a4e-a56c-4db8-9165-e1551e015293/image.png"}}},{"node":{"excerpt":"들어가며 실무에서는 SSR(Server-Side Rendering)을 사용할 일이 많지 않아 아쉬웠는데, 이번 기회에 SSR의 원리와 동작 방식에 대해 정리해보았다.\n특히, Next.js와 같은 프레임워크를 사용할 때 SSR을 제대로 활용하려면 먼저 SSR의 본질적인 개념과 동작 원리를 이해하는 것이 중요하다고 생각했다.\nSSR의 핵심은 서버에서 HTML…","fields":{"slug":"/etc/ssr은-어떻게-동작하는가/"},"frontmatter":{"date":"March 02, 2025","title":"SSR은 어떻게 동작하는가","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/0d8cdcec-8e69-4e8f-ae87-02dd6f5a0d3d/image.png"}}},{"node":{"excerpt":"가독성이 좋지 않고 복잡했던 기존 폴더구조의 문제점 안에 각 페이지 별로 대부분의 코드들이 분류되어 들어가 있다. (가독성이 좋지 않음) 안에 뷰로직,비즈니스로직, 작은 컴포넌트들이 다 모여있어서 구분이 어렵다. api호출하는 부분은 커스텀 훅안에 넣어져있다. <예시 이미지> \n FSD아키텍쳐로 폴더구조 변경하기 위 문제를 해결하기 위해 FSD아카텍쳐를 …","fields":{"slug":"/업무기록/fsd아키텍쳐-활용하여-폴더구조-변경하기/"},"frontmatter":{"date":"January 28, 2025","title":"FSD아키텍쳐 활용하여 폴더구조 변경하기","category":"업무기록","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/49c177e3-1bb4-4cc9-a0d5-84adb3fd8270/image.png"}}},{"node":{"excerpt":"업무 배경 카메라 화면에서 발박스가 가장자리에 붙을 경우 에러 메시지를 띄워야 했다.\n발박스가 카메라 화면의 가장자리에 위치해있다는 것을 구분해야했다. 구현 방법 아래 이미지는 실제로 구현에 성공한 과정에서 찍은 스크린샷이다.\n 라는 가상의 canvas를 만든다. 이 화면은 카메라 화면의 width, height와 동일하다. width,height을 we…","fields":{"slug":"/업무기록/발박스가-화면-가장자리에-붙을-경우-에러메시지-뜨게-하기/"},"frontmatter":{"date":"January 27, 2025","title":"발박스가 화면 가장자리에 붙을 경우 에러메시지 뜨게 하기","category":"업무기록","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/3bae8ed2-22df-47da-9d98-1b38c768ced0/image.png"}}},{"node":{"excerpt":"언젠가 테크리드가 이런 얘기를 한 적이 있다.\n“React Hooks와 함수형 프로그래밍은 서로 밀접한 관계가 있지만, 엄연히 달라요.” \n그렇다면 이 둘은 어떤 특징을 가지고 있고, 어떤 밀접한 관계가 있는지 알아보려고 한다. React Hooks란? Hooks는 함수형 컴포넌트에서 React의 와  기능에 직접적으로 연결(hook)할 수 있도록 해주는…","fields":{"slug":"/react/react-hooks와-함수형-프로그래밍/"},"frontmatter":{"date":"January 27, 2025","title":"react hooks와 함수형 프로그래밍","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/04c899a2-ec4e-4377-90d2-0440f60f65ad/image.png"}}},{"node":{"excerpt":"2024년 12월 5일, react 19버전이 stable로 올라오게 되었다. 이번 기회에 어떤 내용들이 있는지 간략하게 정리해보고 공부해보면 좋겠다는 생각이 들었다. 1. Actions React 19에서는 비동기 함수와 트랜지션을 활용하여 상태 업데이트를 더욱 간편하게 처리할 수 있는 를 도입했다.\n이를 통해 pending 상태, 오류 처리, 낙관적 …","fields":{"slug":"/react/react_nineteen_version/"},"frontmatter":{"date":"January 19, 2025","title":"React 19의 새로운 기능","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/284332a1-b944-4c07-b588-5beeaee74cb7/image.png"}}},{"node":{"excerpt":"Three.js journey 강의를 들으며, galaxy를 만들 수 있는 부분이 있어서 참고해서 개발하며 정리한 것을\n기록해보려고 한다. Galaxy generator 1. 맨 처음 galaxy 함수를 하나 만들고, galaxy생성에 필요한 parameter 객체를 하나 만든다. 2. geometry와 particles(점) 만들기 parameters의…","fields":{"slug":"/three.js/galaxy-generator/"},"frontmatter":{"date":"January 05, 2025","title":"Three.js-Galaxy Generator 만들기","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/30acd145-6e4c-404f-9a43-71d14aa2fdd8/image.png"}}},{"node":{"excerpt":"Three.js 프로젝트를 시작하며 Three.js study를 10월부터 시작하며  기본적인 개념들을 공부했다. \nThree.js의 3가지 기본 요소인 에서부터 , , 등등을 공부하며 여전히 모르는 건 많지만 어느정도 기본적인 것은 많이 파악되었다는 생각이 들었다.  이젠 개념에 대한 공부뿐만 아니라 실제로 개발을 해봐야겠다는 생각이 들어서, 나만의 프…","fields":{"slug":"/three.js/three.js_first_project/"},"frontmatter":{"date":"November 30, 2024","title":"Three.js Project - 달 구현해보기 🌕","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/ff20711d-c6bd-4d27-b5e0-0a649610adf0/image.png"}}},{"node":{"excerpt":"이번엔 리액트에서 많이 사용되는 상태관리 도구 recoil, zustand,jotai에 대해 공부해봤다.\n요즘은 recoil보다는 zustand, jotai를 많이 쓴다는 소식을 들었는데 왜 그런것인지 궁금했다. React 상태관리 도구의 트렌드를 살펴보자 React에는 여러 상태관리도구가 있는데, 현재 회사에서는 recoil로 상태관리를 하고 있다.\n그…","fields":{"slug":"/react/저무는-recoil,이젠-zustand와-jotai가-대세/"},"frontmatter":{"date":"November 23, 2024","title":"저무는 recoil,이젠 zustand와 jotai가 대세","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/63de255c-a9f6-46fe-b026-d7b4c624d983/image.png"}}},{"node":{"excerpt":"이번엔 Three.js의 기본 요소 중 하나로 장면을 렌더링하는데 필수적인 와 renderer가 화면에 출력할 객체들을 구조적으로 관리해주는\n에 대해 알아보았다. Three.js에서 renderer란? three.js에서 renderer란 3D장면을 실제 화면에 그리는 역할을 한다. \nrenerer는 카메라와 장면(scene)에 대한 정보를 기반으로 3D…","fields":{"slug":"/three.js/three.js_render_scene-graph/"},"frontmatter":{"date":"November 09, 2024","title":"Three.js에서 renderer와 Scene Graph 이해하기","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/c9eb947c-a3c0-4288-83f3-857c3c2bcc22/image.png"}}},{"node":{"excerpt":"Intro three.js스터디에 참가하며 공부하고 있다. 이번엔 Three.js의 3가지 기본 요소 중 하나인 카메라에 대해 공부해보았다.  1. 카메라의 역할과 중요성에 대하여  3D 환경에서 카메라는 사용자가 보는 시점과 전체적인 시각적 경험을 결정하는 중요한 요소이다.\n3D 세계를 어떻게 관찰하고 탐험할지를 정의하기에 카메라는 3D렌더링에 있어서 …","fields":{"slug":"/three.js/camera-in-three.js/"},"frontmatter":{"date":"November 09, 2024","title":"Three.js에서의 카메라 이해하기","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/c9eb947c-a3c0-4288-83f3-857c3c2bcc22/image.png"}}},{"node":{"excerpt":"Intro 최근에 Next.js로 개발하는 프로젝트가 있었다.\n신입분이 간단한 UI를 개발하시고, 내가 JS쪽 구조를 잡거나 webpack쪽 코드를 작성했어야 했다.\n보통 webpack쪽 코드는 시니어분들이 작성해주셨기에 엄청 볼일은 없었는데 이번기회에 webpack쪽 코드를 열심히 들여다봤다. 그런데 알 수 없는 에러가 났다. \n이 에러가 웹팩쪽에서 발…","fields":{"slug":"/etc/웹애플리케이션-번들링의-시작---webpack개념과-설정-파일-작성-가이드/"},"frontmatter":{"date":"October 27, 2024","title":"웹 애플리케이션 번들링의 시작 - webpack개념과 설정 파일 작성 예시","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/649c3922-2d20-476a-97c7-c269623785d6/image.png"}}},{"node":{"excerpt":"글또가 10기를 마지막으로 끝난다는 소식을 듣고, 글또의 마지막 마무리를 꼭 함께 하고 싶다라는 생각이 들었다.\n2022년도에 처음 글또를 알게 되어 7기, 8기로 활동을 했었다. 개발자로 글을 쓰고 기록하는 습관을 가지고 싶었는데, 실제로 많은 도움이 됐었다.\n내가 쓰는 글들이 아직 엄청 좋은 글은 아닐지라도, 글을 쓰는 습관을 만들게 해주어서 감사한 …","fields":{"slug":"/etc/10th-start/"},"frontmatter":{"date":"October 13, 2024","title":"글또 10기를 시작하며","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/8b6d63bc-0bc6-44e0-b7bb-53ef41ab49a5/image.png"}}},{"node":{"excerpt":"최근에 개발한 기능이 매우 느리다는 이슈가 있었다. 캐시가 되면 더 빠르게 동작할 것이라고 가정했는데 이 웹 캐시를 다뤄본 적이 없어서 막막했다.\n이번 기회에 웹 캐시에 대해 좀 더 deep-dive 해봤다.😀 🪼 웹 서비스 캐시 이해하기 1.  웹 서비스에서 캐시란 무엇일까? 이를 통해 사용자가 웹사이트를 방문하거나 서비스를 이용할 때, 매번 서버에서 …","fields":{"slug":"/etc/web-service-cache/"},"frontmatter":{"date":"March 24, 2024","title":"Web cache 이해하기","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/dd272aa3-af13-4d65-aa41-e7d9c57a548d/image.png"}}},{"node":{"excerpt":"React query를 쓰는 이유 다른 개발자들과 얘기를 하며, react query를 쓰는게 신세계라는 얘기를 들었는데요!\n이걸 한번도 안써봤다니!! 그래서 이번엔 react query에 대해 공부를 하며, 왜 react query를 쓰면 좋은지 정리해보았습니다.  React query는 원격 API에서 데이터 가져오는 과정을 간소화합니다.  React…","fields":{"slug":"/react/react-query/"},"frontmatter":{"date":"July 16, 2023","title":"React query","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/76582d94-ca32-41b5-a0aa-5e253eb45231/image.jpg"}}},{"node":{"excerpt":"Cookie,Session,Cache에 대한 정리 쿠키와,세션, 캐시는 웹개발 시, 많이 사용되는 용어입니다.\n이것은 어떻게 웹사이트에서 정보를 저장하고 관리하는지에 대한 것과 연관이 있습니다.\n우선 하나하나 cookie,session,cache가 무엇인지 살펴보겠습니다. chatGPT4에게 이것들의 차이가 무엇인지 쉽게 설명해달라고 물어봤는데 예시를 들…","fields":{"slug":"/etc/cookie,session,cache/"},"frontmatter":{"date":"June 14, 2023","title":"cookie,session,cache","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/e2d61aed-b07e-42c2-ac66-22c011e5497f/image.png"}}},{"node":{"excerpt":"Three.js journey 강의를 듣고 공부한 것들을 기록합니다. Animations Three.js에서의 Animation은 stop motion같습니다.\n예를 들면 물체를 옮기고 렌더를 하고, 그 다음 또 물체를 옮기고 다른 렌더를 하는 방식으로 진행되기 때문입니다.\n각 프레임마다 렌더를 하고 물체를 업데이트 해야 하는데, 이는  메서드를 이용해 …","fields":{"slug":"/three.js/animations/"},"frontmatter":{"date":"June 03, 2023","title":"Three.js journey | Animations","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/c9eb947c-a3c0-4288-83f3-857c3c2bcc22/image.png"}}},{"node":{"excerpt":"Three.js journey 강의를 듣고 공부한 것들을 기록합니다. Transform objects scene을 animation하기 앞서, scene에서 어떻게 물체들을 변형시킬 수 있는지 알아야합니다.\nscene에서 물체를 변경시키기 위한 4가지 프로퍼티들이 있습니다. position (물체를 움직일 때) scale(크기를 조정할 때) rotatio…","fields":{"slug":"/three.js/transform-objects/"},"frontmatter":{"date":"May 20, 2023","title":"Three.js journey | transform objects","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/c9eb947c-a3c0-4288-83f3-857c3c2bcc22/image.png"}}},{"node":{"excerpt":"Three.js journey 강의를 듣고 공부한 것들을 기록합니다. First Scene scene을 만들기 위해서는 4개의 요소들이 필요합니다. object를 담을 scene objects camera renderer Scene scene은 컨테이너와 같습니다. object,model,particle,light등을 두게 되는 곳입니다.\nscene을 만…","fields":{"slug":"/three.js/basic-scene/"},"frontmatter":{"date":"May 01, 2023","title":"Three.js journey |  basic scene","category":"three.js","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/c9eb947c-a3c0-4288-83f3-857c3c2bcc22/image.png"}}},{"node":{"excerpt":"프론트에서도 오류를 모니터링하는 방법이 뭐가 있을까요?\n프론트에서 발생하는 오류들을 모니터링하기 위해 저희 개발팀에서는 를 도입해보자는 의견이 나왔습니다. Sentry? Sentry는 오류를 모니터링할 수 있게 해주는 모니터링 툴입니다.\n백엔드, 프론트엔드에서 발생하는 에러트래킹, 퍼포먼스 성능에 대한 모니터링까지 가능하게 해줍니다. 현재 Sentry에는…","fields":{"slug":"/react/sentry/"},"frontmatter":{"date":"April 09, 2023","title":"SENTRY로 프론트 에러 잡아내기","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/13fa205a-7c64-44ee-a43c-e8ad548937f7/image.png"}}},{"node":{"excerpt":"이번주에 기억남는 에러 중 하나가 있었는데요. \n신발 사이즈를 입력하고 이전페이지에 갔다가 다시 오면 신발 사이즈 입력한게 사리지는 이슈였습니다 ㅠㅠ\n이전페이지에서 선택한 신발정보 상태에 추가로 “size” 프로퍼티를 추가하는 방법으로 이 문제를 해결할 수 있었습니다.\n다른 방법이 있었을지 모르겠지만, 다른 개발자와 얘기를 해본 결과 이 방법이 최선인 것…","fields":{"slug":"/javascript/js-object-add/"},"frontmatter":{"date":"March 11, 2023","title":"자바스크립트 객체에 프로퍼티를 추가하는 방법","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/ead6b29b-6ea7-40d9-8c71-6047800518c2/image.png"}}},{"node":{"excerpt":"보통 CRA를 통해 리액트 환경을 쉽게 구성하다보니, 웹팩에 대해서 공부할 일이 별로 없었던 것 같습니다.\n주니어에서 중니어로 성장하려면 CRA를 사용하지 않고 웹팩을 통해 개발환경을 구성하는 법도 알아야겠다는 생각이 들었습니다.\n기본적으로 웹팩이 무엇인지에 대한 공부를 해보고 정리해보았습니다. Webpack 웹팩은 여러개의 파일을 하나로 묶어주는 모듈번…","fields":{"slug":"/etc/about-webpack/"},"frontmatter":{"date":"February 25, 2023","title":"웹팩(Webpack) 이해하기","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/4ad2441e-5c8a-4c20-9f25-571d61ffbfe6/image.png"}}},{"node":{"excerpt":"개발을 할 때 테스트 코드를 작성하는 곳도 많다고 들었다.\n우리 회사는 테스트 코드를 아직 작성하지 않는데 나중에 꼭 해보자고 건의해보고 싶은 부분이다.\n그러기 위해서는 테스트 코드는 무엇이고 어떻게 작성하는지 먼저 아는게 중요하다는 생각이 들었다.\nTDD에 대해 많이 들어봤는데 이것에 대해 알아보고 더 나아가 react에서 테스트를 위해 사용하기 좋은 …","fields":{"slug":"/react/jest/"},"frontmatter":{"date":"February 11, 2023","title":"TDD(테스트 주도 개발)과 jest에 대하여","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/28f18940-96fb-4da9-9900-0a65685b40d0/image.png"}}},{"node":{"excerpt":"타입추론 타입스크립트는 타입 추론을 적극적으로 수행한다.\n타입추론은 수동으로 명시해야하는 타입 구문의 수를 엄청나게 줄여주기에 코드의 전체적인 안정성이 향상된다. 추론 가능한 타입을 사용해 장황한 코드 방지하기 보통 타입 정보가 있는 라이브러리에서 콜백 함수의 매개변수 타입은 자동으로 추론된다.\n다음 예제에서 express HTTP 서버 라이브러리를 사용…","fields":{"slug":"/typescript/type_inference/"},"frontmatter":{"date":"December 14, 2022","title":"타입 추론","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"회사에서 처음으로 코드리뷰 시간이 있었다.\n맨날 급하게 개발해야한다는 핑계로 너무 생각없이 코드를 짠 부분이 보여서 부끄러웠다.\n아래와 같이 api를 호출하기 위해 useEffect를 사용했다.\n이 코드에는 이 있었다. 1. 왜 프로미스와 async await을 혼용하였는가? 다른 개발자분께서 위 코드는 async await이 적용 안되었을 것 같아 보이…","fields":{"slug":"/javascript/promise_and_async-await/"},"frontmatter":{"date":"November 15, 2022","title":"Promise와 async await","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/e5d3c8e4-eec5-4104-9ecf-e641c2b4f0d7/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 자바스크립트의 장점 중 하나는 바로 객체를 생성하는 문법이 간단하다는 것이다. 자바스크립트 객체는 문자열 키를 타입의 값에 관계없이 매핑한다.\n타입스크립트에서는 타입에 를 명시하여 유연하게 매핑을 표현할 수 있다. 이 인덱스 시그니처이며 다음 세 가지 의미를 가지고 있다.  : 키의 위치만 표시하는 용…","fields":{"slug":"/typescript/index-signature/"},"frontmatter":{"date":"November 13, 2022","title":"동적 데이터에 인덱스 시그니처 사용하기","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입 중복은 코드 중복만큼 많은 문제를 일으킨다. 만약에 선택적 필드인 middleName을 Person에 추가한다고 가정해보자.\n그러면 Person과 PersonWithBirthDate은 다른 타입이 된다. 위 예제에서는 한 인터페이스가 다른 인터페이스를 확장하게 해서 반복을 제거하게 한다. 다음 예…","fields":{"slug":"/typescript/typescript-generic/"},"frontmatter":{"date":"November 10, 2022","title":"타입 연산과 제너릭 사용으로 반복을 줄이기","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입과 인터페이스의 차이점 알기 타입스크립트에서 명명된 타입을 정의하는 방법은 2가지가 있다. 대부분의 경우에는 타입을 사용해도 되고 인터페이스를 사용해도 된다.\n그러나 타입과 인터페이스의 차이를 분명히 알고 같은 상황에서는 동일한 방법으로 명명된 타입을 정의해 일관성을 유지해야 한다. 인터페이스 선언…","fields":{"slug":"/typescript/interface-and-type/"},"frontmatter":{"date":"November 08, 2022","title":"타입과 인터페이스의 차이점 알기","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트는 코드를 자바스크립트로 변환하는 역할도 하지만 가장 중요한 역할은 에 있다. 타입이 값들의 집합이라고 생각하기 런타임에 모든 변수는 자바스크립트 세상의 값으로부터 정해지는 각자의 고유한 값을 가진다.\n변수에는 다음처럼 다양한 종류의 값을 할당할 수 있다.\n그러나 코드가 실행되기 전, 즉 타…","fields":{"slug":"/typescript/type-system/"},"frontmatter":{"date":"November 06, 2022","title":"타입스크립트의 타입 시스템1","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"Amazon S3란? 아마존 S3 (Simpe Storage Service)는 아마존 웹 서비스에서 제공하는 온라인 스토리지 웹서비스이다. 파일 저장소 및 파일 서버의 역할을 한다.\n안정성이 뛰어나고 가용성이 높으며 무제한으로 확장 가능한 데이터 스토리지 인프라를 매우 저렴한 비용으로 제공하는 간단한 스토리지 서비스이다. S3가 가지고 있는 특징 s3는 …","fields":{"slug":"/etc/s3,cloundfront,ec2/"},"frontmatter":{"date":"October 13, 2022","title":"S3,CloundFront,EC2","category":"etc","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/d4b8de1f-ff90-4426-b681-d16dbb29e4e4/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트 설정 이해하기 타입스크립트는 타입 정보를 가질 때 가장효과적이기에, 되도록이면 를 설정해줘야 한다.\n모든 변수에 타입을 명시하는 것에 익숙해지면, noImplicitAny가 없는 채로 작성된 타입스크립트는 완전히 다른 언어처럼 느껴질 것이다. 새 프로젝트를 시작한다면 처음부터 를 설정하여 …","fields":{"slug":"/typescript/타입스크립트스터디/"},"frontmatter":{"date":"October 02, 2022","title":"타입스크립트 알아보기2","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트 알아보기 타입스크립트는 사용 방식 면에서 조금 독특하다. \n자바스크립트로 컴파일되며 실행 역시 자바스크립트로 이루어진다. 아이템 1 타입스크립트와 자바스크립트의 관계 이해하기 타입스크립트는 문법적으로도 자바스크립트의 상위집합이다. 모든 자바스크립트 프로그램이 타입스크립트라는 명제는 참이지만…","fields":{"slug":"/typescript/ts_study/"},"frontmatter":{"date":"September 10, 2022","title":"타입스크립트 알아보기","category":"typescript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/39563e2c-9400-4099-b125-7382c076ae1d/image.png"}}},{"node":{"excerpt":"Recoil이란? Recoil이라는 상태관리 라이브러리에 대해 알기 전에 React에는 어떠한 한계가 있고 Recoil은 어떤 역할을 하는지 알아보았다. React에는 아래와 같은 한계가 있다. 컴포넌트의 상태는 공통된 상위요소까지 끌어올려야만 공유될 수 있으며, 이 과정에서 거대한 트리가 다시 렌더링되는 효과를 야기하기도 한다. Context는 단일 값…","fields":{"slug":"/react/recoil_-react를-위한-상태관리-라이브러리/"},"frontmatter":{"date":"August 29, 2022","title":"react를 위한 상태관리 라이브러리 Recoil","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/34ee05db-322e-4a30-bc48-cec8c9fecd4c/image.png"}}},{"node":{"excerpt":"useCallback과 useMemo는 리액트로 개발할 때 성능 최적화를 위해 많이 사용되는 hook이다.\n이것에 대한 정확한 특징과 차이점을 더 자세히 알기 위해 공부를 해보았다. useCallback과 useMemo에 대해 파고들기 전 먼저 알아둘 점 함수형 컴포넌트는 그냥 함수다. 단지 jsx를 반환하는 함수라는 것을 먼저 알아야 한다.\n컴포넌트가 …","fields":{"slug":"/react/usecallback_usememo/"},"frontmatter":{"date":"August 08, 2022","title":"useCallback과 useMemo 차이점","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/ed085f44-d352-47d3-a184-280a757804b7/image.png"}}},{"node":{"excerpt":"리액트 프로젝트를 개발할 때, 보통 리액트 훅스를 사용한다.\n그러나 개발 과정에서, 여러 문제들을 만나기도 한다.\n대부분의 클래식한 문제는 리액트 훅스의 이다. 이런 비슷한 문제를 겪어본 사람이 있겠지만, 리액트의 숨겨진 원칙으로부터 나온 문제라는 것을 이해하지 못할 것이다. 문제점 상태를 만들기 위해 useState를 사용한다. 그리고 가장 첫번째로 있…","fields":{"slug":"/react/react_hooks/"},"frontmatter":{"date":"July 18, 2022","title":"리액트 훅스의 클로저 트랩 (Closure Trap) 이해하기(번역)","category":"react","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/b03404c5-e25e-43bd-9dae-b8bb14cf6b60/image.png"}}},{"node":{"excerpt":"프론트엔드 개발자로서 더 성장하기 위해서는 어떠한 것들을 해야할까에 대한 고민은 항상 많다.\n우연히 좋은 article을 읽게 되어서 번역보았다. 두고두고 보면서 참고해야겠다.  8 Tips To Become A Better Front End Developer   이 플러그인을 사용해야할까? 아니면 저 라이브러리를 사용해야할까? 이 프로젝트를 하는 걸 계…","fields":{"slug":"/article/to-be-a-better-developer/"},"frontmatter":{"date":"July 02, 2022","title":"더 나은 프론트엔드 개발자가 되기위한 8가지 팁","category":"article","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/726240d6-f3d2-4546-acb6-1c925f1e2592/image.png"}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 이번에는 자바스크립트를 공부한다면 꼭 알아야한다는 개념 프로토타입이 무엇인지에 대해 공부해보았다. 프로토타입 자바스크립트는 명령형, 함수형, 프로토타입 기반 객체지향 프로그래밍을 지원하는 멀티 패러다임 프로그래밍 언어다. 객체지향 프로그래밍 객체지향 프로그래밍은 프로그램을 명령어 또…","fields":{"slug":"/javascript/prototype/"},"frontmatter":{"date":"June 22, 2022","title":"프로토타입에 대하여","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/f0ee34c4-87c3-43dc-a33b-fbb72d16cb56/image.png"}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 일급객체는 자바스크립트 공부하면서 많이 들어본 개념이고, 회사의 시니어 개발자 선배도 일급 객체는 꼭 알아두면 좋은 개념이라고 말씀하셨다!\n그래서 이번에 일급객체는 무엇인지 공부해보았다.\n일급객체는 도대체 무엇일까? 일급 객체 1.무명의 리터럴로 생성할 수 있다. 즉, 런타임에 생성…","fields":{"slug":"/javascript/firstclass-object/"},"frontmatter":{"date":"June 05, 2022","title":"함수와 일급 객체","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/3f2015f1-0d10-4bc8-a9a7-7860a43c2b90/image.png"}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 개발을 할 때, 전역변수는 최대한 안쓰려고 한다. 정말 사용해야하는 경우가 아니면..\n왜냐하면 전역 변수의 무분별한 사용은 위험하기 때문이다.\n전역 변수를 반드시 사용해야할 이유가 없다면 지역 변수를 사용하는 것이 좋다. 1. 변수의 생명 주기 변수는 선언에 의해 생성되고 할당을 통…","fields":{"slug":"/javascript/전역변수의-문제점/"},"frontmatter":{"date":"May 28, 2022","title":"전역변수의 문제점","category":"javascript","draft":false,"image":"https://velog.velcdn.com/images/chloeee/post/a5453859-43ee-40d7-a953-784ddb42933c/image.png"}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}