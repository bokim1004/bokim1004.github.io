{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Chloebo.io","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"프론트에서도 오류를 모니터링하는 방법이 뭐가 있을까요?\n프론트에서 발생하는 오류들을 모니터링하기 위해 저희 개발팀에서는 를 도입해보자는 의견이 나왔습니다. Sentry? Sentry는 오류를 모니터링할 수 있게 해주는 모니터링 툴입니다.\n백엔드, 프론트엔드에서 발생하는 에러트래킹, 퍼포먼스 성능에 대한 모니터링까지 가능하게 해줍니다. 현재 Sentry에는…","fields":{"slug":"/react/sentry로-프론트-에러-잡아내기/"},"frontmatter":{"date":"April 09, 2023","title":"SENTRY로 프론트 에러 잡아내기","category":"react","draft":false}}},{"node":{"excerpt":"이번주에 기억남는 에러 중 하나가 있었는데요. \n신발 사이즈를 입력하고 이전페이지에 갔다가 다시 오면 신발 사이즈 입력한게 사리지는 이슈였습니다 ㅠㅠ\n이전페이지에서 선택한 신발정보 상태에 추가로 “size” 프로퍼티를 추가하는 방법으로 이 문제를 해결할 수 있었습니다.\n다른 방법이 있었을지 모르겠지만, 다른 개발자와 얘기를 해본 결과 이 방법이 최선인 것…","fields":{"slug":"/javascript/js-object-add/"},"frontmatter":{"date":"March 11, 2023","title":"👉 자바스크립트 객체에 프로퍼티를 추가하는 방법","category":"javascript","draft":false}}},{"node":{"excerpt":"보통 CRA를 통해 리액트 환경을 쉽게 구성하다보니, 웹팩에 대해서 공부할 일이 별로 없었던 것 같습니다.\n주니어에서 중니어로 성장하려면 CRA를 사용하지 않고 웹팩을 통해 개발환경을 구성하는 법도 알아야겠다는 생각이 들었습니다.\n기본적으로 웹팩이 무엇인지에 대한 공부를 해보고 정리해보았습니다. Webpack 웹팩은 여러개의 파일을 하나로 묶어주는 모듈번…","fields":{"slug":"/etc/about-webpack/"},"frontmatter":{"date":"February 25, 2023","title":"웹팩(Webpack) 이해하기","category":"etc","draft":false}}},{"node":{"excerpt":"개발을 할 때 테스트 코드를 작성하는 곳도 많다고 들었다.\n우리 회사는 테스트 코드를 아직 작성하지 않는데 나중에 꼭 해보자고 건의해보고 싶은 부분이다.\n그러기 위해서는 테스트 코드는 무엇이고 어떻게 작성하는지 먼저 아는게 중요하다는 생각이 들었다.\nTDD에 대해 많이 들어봤는데 이것에 대해 알아보고 더 나아가 react에서 테스트를 위해 사용하기 좋은 …","fields":{"slug":"/react/jest/"},"frontmatter":{"date":"February 11, 2023","title":"TDD(테스트 주도 개발)과 jest에 대하여","category":"react","draft":false}}},{"node":{"excerpt":"타입추론 타입스크립트는 타입 추론을 적극적으로 수행한다.\n타입추론은 수동으로 명시해야하는 타입 구문의 수를 엄청나게 줄여주기에 코드의 전체적인 안정성이 향상된다. 추론 가능한 타입을 사용해 장황한 코드 방지하기 보통 타입 정보가 있는 라이브러리에서 콜백 함수의 매개변수 타입은 자동으로 추론된다.\n다음 예제에서 express HTTP 서버 라이브러리를 사용…","fields":{"slug":"/typescript/type_inference/"},"frontmatter":{"date":"December 14, 2022","title":"type_inference","category":"typescript","draft":false}}},{"node":{"excerpt":"회사에서 처음으로 코드리뷰 시간이 있었다.\n맨날 급하게 개발해야한다는 핑계로 너무 생각없이 코드를 짠 부분이 보여서 부끄러웠다.\n아래와 같이 api를 호출하기 위해 useEffect를 사용했다.\n이 코드에는 이 있었다. 1. 왜 프로미스와 async await을 혼용하였는가? 다른 개발자분께서 위 코드는 async await이 적용 안되었을 것 같아 보이…","fields":{"slug":"/javascript/promise_and_async-await/"},"frontmatter":{"date":"November 15, 2022","title":"프로미스와 async await","category":"javascript","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 자바스크립트의 장점 중 하나는 바로 객체를 생성하는 문법이 간단하다는 것이다. 자바스크립트 객체는 문자열 키를 타입의 값에 관계없이 매핑한다.\n타입스크립트에서는 타입에 를 명시하여 유연하게 매핑을 표현할 수 있다. 이 인덱스 시그니처이며 다음 세 가지 의미를 가지고 있다.  : 키의 위치만 표시하는 용…","fields":{"slug":"/typescript/index-signature/"},"frontmatter":{"date":"November 13, 2022","title":"동적 데이터에 인덱스 시그니처 사용하기","category":"typescript","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입 중복은 코드 중복만큼 많은 문제를 일으킨다. 만약에 선택적 필드인 middleName을 Person에 추가한다고 가정해보자.\n그러면 Person과 PersonWithBirthDate은 다른 타입이 된다. 위 예제에서는 한 인터페이스가 다른 인터페이스를 확장하게 해서 반복을 제거하게 한다. 다음 예…","fields":{"slug":"/typescript/typescript-generic/"},"frontmatter":{"date":"November 10, 2022","title":"타입 연산과 제너릭 사용으로 반복을 줄이기","category":"typescript","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입과 인터페이스의 차이점 알기 타입스크립트에서 명명된 타입을 정의하는 방법은 2가지가 있다. 대부분의 경우에는 타입을 사용해도 되고 인터페이스를 사용해도 된다.\n그러나 타입과 인터페이스의 차이를 분명히 알고 같은 상황에서는 동일한 방법으로 명명된 타입을 정의해 일관성을 유지해야 한다. 인터페이스 선언…","fields":{"slug":"/typescript/interface-and-type/"},"frontmatter":{"date":"November 08, 2022","title":"타입과 인터페이스의 차이점 알기","category":"typescript","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트는 코드를 자바스크립트로 변환하는 역할도 하지만 가장 중요한 역할은 에 있다. 타입이 값들의 집합이라고 생각하기 런타임에 모든 변수는 자바스크립트 세상의 값으로부터 정해지는 각자의 고유한 값을 가진다.\n변수에는 다음처럼 다양한 종류의 값을 할당할 수 있다.\n그러나 코드가 실행되기 전, 즉 타…","fields":{"slug":"/typescript/type-system/"},"frontmatter":{"date":"November 06, 2022","title":"타입스크립트의 타입 시스템1","category":"typescript","draft":false}}},{"node":{"excerpt":"Amazon S3란? 아마존 S3 (Simpe Storage Service)는 아마존 웹 서비스에서 제공하는 온라인 스토리지 웹서비스이다. 파일 저장소 및 파일 서버의 역할을 한다.\n안정성이 뛰어나고 가용성이 높으며 무제한으로 확장 가능한 데이터 스토리지 인프라를 매우 저렴한 비용으로 제공하는 간단한 스토리지 서비스이다. S3가 가지고 있는 특징 s3는 …","fields":{"slug":"/etc/s3,cloundfront,ec2/"},"frontmatter":{"date":"October 13, 2022","title":"S3,CloundFront,EC2","category":"etc","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트 설정 이해하기 타입스크립트는 타입 정보를 가질 때 가장효과적이기에, 되도록이면 를 설정해줘야 한다.\n모든 변수에 타입을 명시하는 것에 익숙해지면, noImplicitAny가 없는 채로 작성된 타입스크립트는 완전히 다른 언어처럼 느껴질 것이다. 새 프로젝트를 시작한다면 처음부터 를 설정하여 …","fields":{"slug":"/typescript/타입스크립트스터디/"},"frontmatter":{"date":"October 02, 2022","title":"타입스크립트 알아보기2","category":"typescript","draft":false}}},{"node":{"excerpt":"이펙티브 타입스크립트를 읽고 공부한 것을 기록합니다. 타입스크립트 알아보기 타입스크립트는 사용 방식 면에서 조금 독특하다. \n자바스크립트로 컴파일되며 실행 역시 자바스크립트로 이루어진다. 아이템 1 타입스크립트와 자바스크립트의 관계 이해하기 타입스크립트는 문법적으로도 자바스크립트의 상위집합이다. 모든 자바스크립트 프로그램이 타입스크립트라는 명제는 참이지만…","fields":{"slug":"/typescript/ts_study/"},"frontmatter":{"date":"September 10, 2022","title":"타입스크립트 알아보기","category":"typescript","draft":false}}},{"node":{"excerpt":"Recoil이란? Recoil이라는 상태관리 라이브러리에 대해 알기 전에 React에는 어떠한 한계가 있고 Recoil은 어떤 역할을 하는지 알아보았다. React에는 아래와 같은 한계가 있다. 컴포넌트의 상태는 공통된 상위요소까지 끌어올려야만 공유될 수 있으며, 이 과정에서 거대한 트리가 다시 렌더링되는 효과를 야기하기도 한다. Context는 단일 값…","fields":{"slug":"/react/recoil_-react를-위한-상태관리-라이브러리/"},"frontmatter":{"date":"August 29, 2022","title":"Recoil_ react를 위한 상태관리 라이브러리","category":"react","draft":false}}},{"node":{"excerpt":"useCallback과 useMemo는 리액트로 개발할 때 성능 최적화를 위해 많이 사용되는 hook이다.\n이것에 대한 정확한 특징과 차이점을 더 자세히 알기 위해 공부를 해보았다. useCallback과 useMemo에 대해 파고들기 전 먼저 알아둘 점 함수형 컴포넌트는 그냥 함수다. 단지 jsx를 반환하는 함수라는 것을 먼저 알아야 한다.\n컴포넌트가 …","fields":{"slug":"/react/usecallback_usememo/"},"frontmatter":{"date":"August 08, 2022","title":"useCallback과 useMemo 차이점","category":"react","draft":false}}},{"node":{"excerpt":"리액트 프로젝트를 개발할 때, 보통 리액트 훅스를 사용한다.\n그러나 개발 과정에서, 여러 문제들을 만나기도 한다.\n대부분의 클래식한 문제는 리액트 훅스의 이다. 이런 비슷한 문제를 겪어본 사람이 있겠지만, 리액트의 숨겨진 원칙으로부터 나온 문제라는 것을 이해하지 못할 것이다. 문제점 상태를 만들기 위해 useState를 사용한다. 그리고 가장 첫번째로 있…","fields":{"slug":"/react/react_hooks/"},"frontmatter":{"date":"July 18, 2022","title":"리액트 훅스의 클로저 트랩 (Closure Trap) 이해하기(번역)","category":"react","draft":false}}},{"node":{"excerpt":"프론트엔드 개발자로서 더 성장하기 위해서는 어떠한 것들을 해야할까에 대한 고민은 항상 많다.\n우연히 좋은 article을 읽게 되어서 번역보았다. 두고두고 보면서 참고해야겠다.  8 Tips To Become A Better Front End Developer   이 플러그인을 사용해야할까? 아니면 저 라이브러리를 사용해야할까? 이 프로젝트를 하는 걸 계…","fields":{"slug":"/article/to-be-a-better-developer/"},"frontmatter":{"date":"July 02, 2022","title":"더 나은 프론트엔드 개발자가 되기위한 8가지 팁","category":"article","draft":false}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 이번에는 자바스크립트를 공부한다면 꼭 알아야한다는 개념 프로토타입이 무엇인지에 대해 공부해보았다. 프로토타입 자바스크립트는 명령형, 함수형, 프로토타입 기반 객체지향 프로그래밍을 지원하는 멀티 패러다임 프로그래밍 언어다. 객체지향 프로그래밍 객체지향 프로그래밍은 프로그램을 명령어 또…","fields":{"slug":"/javascript/prototype/"},"frontmatter":{"date":"June 22, 2022","title":"prototype","category":"javascript","draft":false}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 일급객체는 자바스크립트 공부하면서 많이 들어본 개념이고, 회사의 시니어 개발자 선배도 일급 객체는 꼭 알아두면 좋은 개념이라고 말씀하셨다!\n그래서 이번에 일급객체는 무엇인지 공부해보았다.\n일급객체는 도대체 무엇일까? 일급 객체 1.무명의 리터럴로 생성할 수 있다. 즉, 런타임에 생성…","fields":{"slug":"/javascript/firstclass-object/"},"frontmatter":{"date":"June 05, 2022","title":"함수와 일급 객체","category":"javascript","draft":false}}},{"node":{"excerpt":"| 모던 자바스크립트 DEEP DIVE를 읽고 공부한 부분을 기록합니다. 개발을 할 때, 전역변수는 최대한 안쓰려고 한다. 정말 사용해야하는 경우가 아니면..\n왜냐하면 전역 변수의 무분별한 사용은 위험하기 때문이다.\n전역 변수를 반드시 사용해야할 이유가 없다면 지역 변수를 사용하는 것이 좋다. 1. 변수의 생명 주기 변수는 선언에 의해 생성되고 할당을 통…","fields":{"slug":"/javascript/전역변수의-문제점/"},"frontmatter":{"date":"May 28, 2022","title":"전역변수의 문제점","category":"javascript","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}